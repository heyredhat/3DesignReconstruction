(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    432595,       9192]
NotebookOptionsPosition[    415776,       8892]
NotebookOutlinePosition[    416172,       8908]
CellTagsIndexPosition[    416129,       8905]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Classification of P\[CloseCurlyQuote]s", "Title",
 CellChangeTimes->{{3.947542971427805*^9, 
  3.947543013155904*^9}},ExpressionUUID->"5d1288d4-1ad4-4ee0-bafe-\
87175a64a060"],

Cell[TextData[{
 "At least at the moment, we are restricting our attention to P matrices \
which have certain symmetries. Given the number of reference outcomes(",
 "n), the rank of P (r), and the inverse depolarizing parameter (\[Alpha])",
 ", we require:\n\t1) \[ForAll] i, j: ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "ij"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bdb0b745-30e5-43e7-a865-60989fe28c2a"],
 " \[GreaterEqual] 0\n\t2) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ForAll]", 
    RowBox[{"j", ":", 
     SubscriptBox["\[Sum]", "i"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cc4cc225-d448-4999-bd72-7b8392421954"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "ij"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9c399dce-af2f-4873-ac6c-3cef936f140e"],
 " = 1\n\t3) P = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["P", "T"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8c1e20f1-f92b-4930-81e9-f1ec430f36ec"],
 "\n\t4) \[ForAll] i: ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "ii"], TraditionalForm]],ExpressionUUID->
  "305702a9-8ad9-4004-8ab2-6470ba4f0458"],
 "= const.\n\t5) Eigenvalues of P: {1, 1/\[Alpha], ..., 0, ..., 0}, where 1/\
\[Alpha] is repeated r-1 times.\nIn low dimensions, this strongly restricts \
the possible P\[CloseCurlyQuote]s. Here we classify P matrices up to n=4. It \
would desirable to do this perhaps up to n=6, the first case where there is a \
quantum 3-design to be found. \n\nWe can also analytically solve for the \
state-spaces (we consider only the case of simple A here)!"
}], "Text",
 CellChangeTimes->{{3.947543016054031*^9, 3.947543448993594*^9}, {
  3.947543552693582*^9, 3.947543560378354*^9}, {3.947544197361422*^9, 
  3.947544218846875*^9}, {3.947557421261698*^9, 
  3.947557434765745*^9}},ExpressionUUID->"6afabc3f-9002-4b2c-8166-\
832bea29fdc9"],

Cell[CellGroupData[{

Cell["Preliminaries", "Section",
 CellChangeTimes->{{3.947543999920273*^9, 
  3.947544016863134*^9}},ExpressionUUID->"15fcbc91-58c2-4bf5-a6e0-\
8ba1deaa61fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Construct\[CapitalPhi]", "[", 
    RowBox[{"n_", ",", " ", "\[Alpha]"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]"}], ")"}], "/", "n"}]}], "}"}], ",", " ", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"IdentityMatrix", "[", "n", "]"}]}], " ", "+", " ", 
      RowBox[{"\[Beta]", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstructV", " ", "[", "n_", "]"}], ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"i", ",", "j"}], "]"}], 
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"i", ",", "k"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "n"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"k", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstructA", "[", 
    RowBox[{"n_", ",", " ", "\[Alpha]_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Eta]", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}], "}"}], ",", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"i", ",", "j"}], "]"}], "-", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"i", ",", "k"}], "]"}], "-", 
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"j", ",", "k"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "1", ",", " ", "n"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstructB", "[", 
    RowBox[{"n_", ",", "\[Alpha]_", ",", " ", "\[Chi]_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"V", " ", "=", " ", 
        RowBox[{"ConstructV", "[", "n", "]"}]}], ",", " ", 
       RowBox[{"A", " ", "=", " ", 
        RowBox[{"ConstructA", "[", 
         RowBox[{"n", ",", " ", "\[Alpha]"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"V", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], "-", 
             RowBox[{"A", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], ")"}], 
           RowBox[{"\[Chi]", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", " ", "n"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}], "]"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstructC", "[", 
    RowBox[{
    "n_", ",", " ", "\[Alpha]_", ",", " ", "P_", ",", " ", "\[Chi]_"}], "]"}],
    ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalPhi]", "=", 
        RowBox[{"Construct\[CapitalPhi]", "[", 
         RowBox[{"n", ",", " ", "\[Alpha]"}], "]"}]}], ",", " ", 
       RowBox[{"B", " ", "=", " ", 
        RowBox[{"ConstructB", "[", 
         RowBox[{"n", ",", " ", "\[Alpha]", ",", " ", "\[Chi]"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
      "P", ".", "\[CapitalPhi]", ".", "B", ".", "P", ".", "\[CapitalPhi]"}], 
      "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.947544019443568*^9, 3.94754406068598*^9}, {
  3.94754410443935*^9, 3.9475441281577997`*^9}, {3.947544169022098*^9, 
  3.947544171156139*^9}, {3.947544254262226*^9, 3.947544515231125*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a4006ede-ec9e-4afe-852a-c7ff62829fde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConstructEmbedding", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"SingularValueDecomposition", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "n", "]"}], "-", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", " ", 
           RowBox[{"{", 
            RowBox[{"n", ",", "n"}], "}"}]}], "]"}], "/", "n"}]}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"n", "-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Embed", "[", "\[Chi]_", "]"}], ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "\[Chi]", "]"}]}], ",", 
       RowBox[{"F", " ", "=", " ", 
        RowBox[{"ConstructEmbedding", "[", 
         RowBox[{"Length", "[", "\[Chi]", "]"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"F", ".", 
       RowBox[{"(", 
        RowBox[{"\[Chi]", "-", 
         RowBox[{"1", "/", "n"}]}], ")"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Unembed", "[", "\[Lambda]_", "]"}], ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", " ", "=", " ", 
        RowBox[{
         RowBox[{"Length", "[", "\[Lambda]", "]"}], "+", "1"}]}], ",", 
       RowBox[{"F", " ", "=", " ", 
        RowBox[{"ConstructEmbedding", "[", 
         RowBox[{
          RowBox[{"Length", "[", "\[Lambda]", "]"}], "+", "1"}], "]"}]}]}], 
      "}"}], ",", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Transpose", "[", "F", "]"}], ".", "\[Lambda]"}], ")"}], " ",
        "+", " ", 
       RowBox[{"1", "/", "n"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.947545928194221*^9, {3.947545971465439*^9, 3.947545982247697*^9}, {
   3.94754603800012*^9, 3.947546089358646*^9}, {3.947546365539605*^9, 
   3.947546379483214*^9}, {3.947546729774046*^9, 3.947546890201497*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"266346d2-e2c8-441b-b617-74b901cf6f72"]
}, Open  ]],

Cell[CellGroupData[{

Cell["n=2", "Section",
 CellChangeTimes->{{3.947543457352879*^9, 
  3.94754347707484*^9}},ExpressionUUID->"38276543-c9fe-435a-ac31-\
8a0c04b31146"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.947546646656045*^9, 3.94754665123529*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"aae16506-b2e6-4378-bf1f-c30ab1643a96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "1", "]"}], ",", " ", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}]}], ",", " ", 
       RowBox[{"p", "[", "1", "]"}]}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"Pn2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.9475434922861443`*^9, 3.947543573877244*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"2a1848a3-55ff-408c-a145-545e4c8fd91a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}]}]},
     {
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      RowBox[{"p", "[", "1", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.947543574168118*^9, 3.947550129005427*^9, 
  3.9475591123490868`*^9},
 CellLabel->
  "Out[10]//MatrixForm=",ExpressionUUID->"fa95ff76-b362-4eb6-9c3e-\
c26b4fcfd9a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "Pn2", "]"}]], "Input",
 CellChangeTimes->{{3.9475435851837883`*^9, 3.9475435882320433`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"207a5ffd-c78f-4611-a175-0692ecda91ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "1", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9475435885310793`*^9, 3.947550130207862*^9, 
  3.947559113636533*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"32ae082e-690f-424e-bab4-9dc191ce363b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["r=1", "Subtitle",
 CellChangeTimes->{{3.947543629701157*^9, 
  3.947543631616791*^9}},ExpressionUUID->"7c6c045f-5d33-41fb-b0a6-\
38605e9ad13d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"p", "[", "1", "]"}]}]}], "==", "0"}], ",", 
    RowBox[{"p", "[", "1", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947543644418263*^9, 3.947543676613447*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ba8a7ba1-6890-463d-b341-def645f194d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.947543651205833*^9, 3.9475436788559227`*^9}, 
   3.947543907503098*^9, 3.947550131802017*^9, 3.947559115344738*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"669b1d34-f76b-4e6b-8410-60390084b111"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn2r1", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Pn2", "/.", 
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], " ", ";", " ", 
  RowBox[{"Pn2r1", "//", " ", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.9475436663114843`*^9, 3.9475436988505707`*^9}, {
  3.947543900017411*^9, 3.947543902661079*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"21db82af-b2e0-4b04-86a6-047652929bb0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.947543683255905*^9, 3.947543699510005*^9}, {
   3.947543906010605*^9, 3.947543908757513*^9}, 3.947550132783568*^9, 
   3.947559116425817*^9},
 CellLabel->
  "Out[13]//MatrixForm=",ExpressionUUID->"25d4dfff-f06b-4d32-b849-\
439753b1b04e"]
}, Open  ]],

Cell["\<\
Obviously, for r=1, this is pretty boring! And this is generally true, due to \
the stochastic condition. If we demand r=1, we end up with (1/n) J, where J \
is the matrix of all 1\[CloseCurlyQuote]s.\
\>", "Text",
 CellChangeTimes->{{3.947548927653552*^9, 3.947548946631443*^9}, {
  3.9475506017650003`*^9, 
  3.94755063012601*^9}},ExpressionUUID->"74803714-92d5-4e22-aa8a-\
d8d49c920eeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["r=2", "Subtitle",
 CellChangeTimes->{{3.94754385605606*^9, 
  3.947543857236123*^9}},ExpressionUUID->"6f862bc4-df2c-435a-b4af-\
1ae6e139dbd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"p", "[", "1", "]"}]}]}], "==", 
     RowBox[{"1", "/", "\[Alpha]"}]}], ",", 
    RowBox[{"p", "[", "1", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947543869004108*^9, 3.947543873822586*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"51d36384-3e5c-4764-a02a-3c09f7870d60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"1", "+", "\[Alpha]"}], 
     RowBox[{"2", " ", "\[Alpha]"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.947543874857994*^9, 3.947543910498631*^9, 
  3.947550135169201*^9, 3.947559118659902*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6b6501d2-e867-4609-a5ff-903b1d3785f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn2r2", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Pn2", "/.", 
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], " ", ";", " ", 
  RowBox[{"Pn2r2", "//", " ", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.947543890619416*^9, 3.9475438981402903`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"b8f52d6d-981c-44d6-96ec-aec2114b9e7c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]"}], 
       RowBox[{"2", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"2", " ", "\[Alpha]"}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"2", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]"}], 
       RowBox[{"2", " ", "\[Alpha]"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.947543893021398*^9, 3.9475439117987747`*^9}, 
   3.9475501364488297`*^9, 3.947559119843587*^9},
 CellLabel->
  "Out[15]//MatrixForm=",ExpressionUUID->"66da6ae8-654e-4f81-a194-\
b5028f30d55d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"Pn2r2", ">=", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.947543966957697*^9, 3.947543970730825*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"0ecc6d4e-2833-43ba-be4e-381749bbcfd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "||", 
  RowBox[{"\[Alpha]", "\[GreaterEqual]", "1"}]}]], "Output",
 CellChangeTimes->{3.9475439709915524`*^9, 3.9475501384023542`*^9, 
  3.94755912138465*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"90a352f4-4b7b-41fd-b815-dfe15c0e255e"]
}, Open  ]],

Cell["\<\
Naturally, we want \[Alpha] \[GreaterEqual] 1. So now we have all the P\
\[CloseCurlyQuote]s with n=2, r=2 as a function of \[Alpha].\
\>", "Text",
 CellChangeTimes->{{3.9475489549149723`*^9, 3.947548978402199*^9}, {
  3.9475491725856667`*^9, 
  3.947549188292243*^9}},ExpressionUUID->"119358bb-f938-4423-bafc-\
2f0aa239a329"],

Cell[CellGroupData[{

Cell["State-space", "Subsection",
 CellChangeTimes->{{3.9475463899893627`*^9, 
  3.9475464174497747`*^9}},ExpressionUUID->"cdc498c9-9d8b-4e15-aa6e-\
2f0ec0376d5c"],

Cell["\<\
We first define \[Lambda]: components of a state embedded into n-1 \
dimensions. Then get the unembedded version \[Chi], and construct the C \
matrix.\
\>", "Text",
 CellChangeTimes->{{3.947548981199912*^9, 
  3.947549107698098*^9}},ExpressionUUID->"2bb0397d-76c4-47d8-88b6-\
3f25f99b9ae0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", "-", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", " ", "=", " ", 
   RowBox[{"Unembed", "[", "\[Lambda]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cn2r2", "=", 
   RowBox[{"ConstructC", "[", 
    RowBox[{"n", ",", " ", "\[Alpha]", ",", "Pn2r2", ",", " ", "\[Chi]"}], 
    "]"}]}], ";", " ", 
  RowBox[{"Cn2r2", "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.9475469350326433`*^9, 3.947546958367865*^9}, 
   3.947546994548354*^9, {3.947547125634151*^9, 3.947547125822294*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"18baf734-cea5-4003-819e-79e4c0ac4941"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]", "-", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "1", "]"}]}]}], 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "\[Alpha]"}]}]], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["1", 
        RowBox[{"1", "+", "\[Alpha]"}]]}]},
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       FractionBox["1", 
        RowBox[{"1", "+", "\[Alpha]"}]]}], 
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]", "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "1", "]"}]}]}], 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "\[Alpha]"}]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.947547126161766*^9, 3.9475501399863462`*^9, 
  3.947559123087697*^9},
 CellLabel->
  "Out[19]//MatrixForm=",ExpressionUUID->"5c2c6a3f-0814-43c7-8a1e-\
5a51584c9f94"]
}, Open  ]],

Cell["\<\
The condition for validity is that all the eigenvalues of C are non-negative. \
We also ensure that the components of the probability vector are in [0,1], \
and that \[Alpha] \[GreaterEqual] 1.\
\>", "Text",
 CellChangeTimes->{{3.94754907348929*^9, 3.947549139147838*^9}, {
  3.947549197940461*^9, 
  3.947549200111889*^9}},ExpressionUUID->"20663608-63f6-4371-b2e6-\
1c9e551639cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Eigenvalues", "[", "Cn2r2", "]"}], ">=", "0"}], ",", " ", 
     RowBox[{"0", " ", "<=", " ", "\[Chi]", " ", "<=", "1"}], ",", " ", 
     RowBox[{"\[Alpha]", ">=", "1"}]}], "}"}], ",", " ", "\[Lambda]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9475470300102453`*^9, 3.9475470814886713`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"eeedb68a-c538-4352-9632-9828f241ca24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Equal]", "1"}], "&&", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], "\[LessEqual]", 
     RowBox[{"x", "[", "1", "]"}], "\[LessEqual]", 
     FractionBox["1", 
      SqrtBox["2"]]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Alpha]", ">", "1"}], "&&", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SqrtBox[
        FractionBox["1", "\[Alpha]"]], 
       SqrtBox["2"]]}], "\[LessEqual]", 
     RowBox[{"x", "[", "1", "]"}], "\[LessEqual]", 
     FractionBox[
      SqrtBox[
       FractionBox["1", "\[Alpha]"]], 
      SqrtBox["2"]]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.9475470364905767`*^9, 3.947547081940899*^9}, 
   3.947547131908038*^9, 3.94754920189992*^9, 3.947550142319368*^9, 
   3.947559125034541*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"1a5e1d0b-efda-46c0-a34f-59190d7698ed"]
}, Open  ]],

Cell["\<\
Indeed, the first case, when \[Alpha] = 1, corresponds to the classical \
simplex.\
\>", "Text",
 CellChangeTimes->{{3.9475487703287*^9, 3.947548785977606*^9}, {
  3.9475492082908707`*^9, 
  3.94754922183949*^9}},ExpressionUUID->"f16a48e7-16b8-49f6-ac25-\
fb293f46beee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Unembed", "[", 
    RowBox[{"{", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], "}"}], "]"}], ",", " ", 
   RowBox[{"Unembed", "[", 
    RowBox[{"{", 
     FractionBox["1", 
      SqrtBox["2"]], "}"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.947547514304495*^9, 3.947547531371893*^9}, {
  3.9475492265708437`*^9, 3.947549238000094*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"f2286e5a-696b-4bd7-b44f-1bd9ff6887c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.947549238208748*^9, 3.947559127098284*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"c07ee239-7d87-47ba-8eed-1cbaebd23d20"]
}, Open  ]],

Cell["\<\
So let\[CloseCurlyQuote]s consider the embedded points corresponding to: 1) \
the vertices of the simplex, 2) the reference states, and 3) the bounds on \
the state-space.\
\>", "Text",
 CellChangeTimes->{{3.947549253214119*^9, 
  3.947549285337392*^9}},ExpressionUUID->"46ad6299-e4a6-456a-b1ec-\
b9419c552e65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimplexVectors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", " ", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ValidRegion", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SqrtBox[
        FractionBox["1", "\[Alpha]"]], 
       SqrtBox["2"]]}], ",", 
     FractionBox[
      SqrtBox[
       FractionBox["1", "\[Alpha]"]], 
      SqrtBox["2"]]}], " ", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ReferenceVectors", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Embed", "[", 
       RowBox[{"Pn2r2", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.947547702142466*^9, 3.947547729215165*^9}, {
  3.947547789830948*^9, 3.947547796892864*^9}, {3.947547843382777*^9, 
  3.947547850961008*^9}, {3.947547899735736*^9, 3.9475479272334213`*^9}, {
  3.947548120000658*^9, 3.947548127202999*^9}, {3.947548300939724*^9, 
  3.947548317568602*^9}, {3.94754856686483*^9, 3.947548572547776*^9}, {
  3.9475486477277517`*^9, 3.947548650655348*^9}, {3.9475519075282288`*^9, 
  3.947551907967018*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"ce09658e-947f-4b94-9d30-3e97140cd865"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{
      SqrtBox["2"], " ", "\[Alpha]"}]]}], ",", 
   FractionBox["1", 
    RowBox[{
     SqrtBox["2"], " ", "\[Alpha]"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.9475483160876913`*^9, 3.947548317854212*^9}, 
   3.9475485728416643`*^9, 3.9475487632554283`*^9, 3.947550144603692*^9, 
   3.947551908426453*^9, 3.947559129531456*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"e9d5b8be-72c3-4b0d-865b-ecb87713346c"]
}, Open  ]],

Cell["\<\
Below we plot in 1D the simplex vectors in red, the reference states in \
green, and the bounds on the state space in blue. You can drag the slider to \
change the value of \[Alpha].\
\>", "Text",
 CellChangeTimes->{{3.947548808980839*^9, 
  3.9475489121315737`*^9}},ExpressionUUID->"99d0820f-1cfd-4794-898d-\
65bb5a4c4fa4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ContourPlot", "[", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"x", "==", 
           RowBox[{"-", 
            FractionBox["1", 
             SqrtBox["2"]]}]}], ",", " ", 
          RowBox[{"x", "==", 
           FractionBox["1", 
            SqrtBox["2"]]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
        RowBox[{"ContourStyle", "\[Rule]", 
         RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", 
      RowBox[{"ContourPlot", "[", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"x", "==", 
           RowBox[{"-", 
            FractionBox[
             SqrtBox[
              FractionBox["1", "\[Alpha]"]], 
             SqrtBox["2"]]}]}], ",", " ", 
          RowBox[{"x", "==", 
           FractionBox[
            SqrtBox[
             FractionBox["1", "\[Alpha]"]], 
            SqrtBox["2"]]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
        RowBox[{"ContourStyle", "\[Rule]", 
         RowBox[{"{", "Blue", "}"}]}]}], "]"}], ",", 
      RowBox[{"ContourPlot", "[", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"x", "==", 
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{
              SqrtBox["2"], " ", "\[Alpha]"}]]}]}], ",", " ", 
          RowBox[{"x", "==", 
           FractionBox["1", 
            RowBox[{
             SqrtBox["2"], " ", "\[Alpha]"}]]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
        RowBox[{"ContourStyle", "\[Rule]", 
         RowBox[{"{", "Green", "}"}]}]}], "]"}]}], "}"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", " ", "1", ",", " ", "100"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9475473987695293`*^9, 3.947547443664506*^9}, {
   3.947547542089533*^9, 3.947547552991149*^9}, 3.947547892217112*^9, {
   3.947547936345529*^9, 3.947547990187273*^9}, {3.9475480754595346`*^9, 
   3.947548183312037*^9}, {3.947548328739993*^9, 3.947548389698443*^9}, {
   3.947548442948196*^9, 3.9475486004545*^9}, 3.94754865372258*^9, {
   3.947548744885562*^9, 3.947548752996056*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"b11965ca-59bb-4a59-b202-9581327569cd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Alpha]$$], 1, 100}}, Typeset`size$$ = {
    360., {174., 179.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Alpha]$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         ContourPlot[{$CellContext`x == -(1/Sqrt[2]), $CellContext`x == 
           1/Sqrt[2]}, {$CellContext`x, -1, 1}, {$CellContext`y, -1, 1}, 
          ContourStyle -> {Red}], 
         ContourPlot[{$CellContext`x == -(Sqrt[1/$CellContext`\[Alpha]$$]/
             Sqrt[2]), $CellContext`x == 
           Sqrt[1/$CellContext`\[Alpha]$$]/Sqrt[2]}, {$CellContext`x, -1, 
           1}, {$CellContext`y, -1, 1}, ContourStyle -> {Blue}], 
         ContourPlot[{$CellContext`x == -(1/(
             Sqrt[2] $CellContext`\[Alpha]$$)), $CellContext`x == 
           1/(Sqrt[2] $CellContext`\[Alpha]$$)}, {$CellContext`x, -1, 
           1}, {$CellContext`y, -1, 1}, ContourStyle -> {Green}]}], 
      "Specifications" :> {{$CellContext`\[Alpha]$$, 1, 100}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{404., {219., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.947547403496279*^9, 3.9475474053736563`*^9}, 
   3.947547443958815*^9, {3.947547543514974*^9, 3.947547553277219*^9}, 
   3.947547990621044*^9, {3.94754807589167*^9, 3.947548098825274*^9}, {
   3.947548137885923*^9, 3.947548183608162*^9}, {3.947548319361992*^9, 
   3.9475483835084953`*^9}, {3.947548467316882*^9, 3.947548503449101*^9}, {
   3.947548583499125*^9, 3.94754860068108*^9}, 3.947548654462297*^9, {
   3.947548749758306*^9, 3.9475487603512993`*^9}, 3.947548913607152*^9, 
   3.94754929072295*^9, 3.947550146810533*^9, 3.9475591331735697`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"8ec73a09-8b06-43e8-be61-4740741b2c74"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["n=3", "Section",
 CellChangeTimes->{{3.9475493132929287`*^9, 
  3.9475493143461123`*^9}},ExpressionUUID->"206cdc13-d59d-4e43-a1fe-\
c6e0437970aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.94755004402742*^9, 3.947550044829406*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"20fc88e8-f637-4e0c-b6a8-9194732ca1e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn3", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "1", "]"}], ",", " ", 
       RowBox[{"p", "[", "2", "]"}], ",", " ", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "2", "]"}], ",", " ", 
       RowBox[{"p", "[", "1", "]"}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}]}], ",", " ", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}]}], ",", " ", 
       RowBox[{"p", "[", "1", "]"}]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"Pn3", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.94755004705678*^9, 3.947550052448374*^9}, {
  3.9475500915731983`*^9, 3.9475500979430532`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"c3549cfa-2456-48a3-8ad8-bb9bcc23b40e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}]}]},
     {
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}]}]},
     {
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}]}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}]}], 
      RowBox[{"p", "[", "1", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9475500981711493`*^9, 3.9475501507208967`*^9, {3.9475503211776876`*^9, 
   3.947550337635025*^9}, 3.947559141061974*^9},
 CellLabel->
  "Out[27]//MatrixForm=",ExpressionUUID->"582bba7c-7398-4d86-86f9-\
0317f28ad72e"]
}, Open  ]],

Cell["But also the last column must sum to 1.", "Text",
 CellChangeTimes->{{3.947550253159802*^9, 
  3.947550286762656*^9}},ExpressionUUID->"228c7387-8d1b-4201-9fb0-\
93fefd87117d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", " ", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Pn3", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], "]"}], "==", "1"}], ",",
     " ", 
    RowBox[{"p", "[", "2", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947550238073793*^9, 3.947550299062345*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"d0045aee-8a55-4965-bad9-6c7deb594cc6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "2", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9475502483576717`*^9, 3.947550269750671*^9}, {
   3.947550300953336*^9, 3.9475503388732233`*^9}, 3.947559142856485*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"f617feb0-77d3-4c8c-9048-72543d721322"]
}, Open  ]],

Cell["Thus we really only have 1 free parameter.", "Text",
 CellChangeTimes->{{3.947550356236541*^9, 
  3.947550368181838*^9}},ExpressionUUID->"bf2c16f1-62a6-4cf2-b2b9-\
bae230cc53ab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pn3", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "1", "]"}], ",", " ", 
       RowBox[{"p", "[", "2", "]"}], ",", " ", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "2", "]"}], ",", " ", 
       RowBox[{"p", "[", "1", "]"}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}]}], ",", " ", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}]}], ",", " ", 
       RowBox[{"p", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pn3", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Pn3", "/.", 
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", " ", 
  RowBox[{"Pn3", " ", "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.9475502929018993`*^9, 3.947550336553172*^9}, {
  3.94755037428827*^9, 3.947550374902144*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"e475a62c-cfcc-46d4-b94c-a88d3fd72160"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}]}], ")"}]}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}]}], ")"}]}], 
      RowBox[{"p", "[", "1", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.947550304951419*^9, 3.947550340207614*^9}, 
   3.947550378351225*^9, 3.9475591441568727`*^9},
 CellLabel->
  "Out[30]//MatrixForm=",ExpressionUUID->"07716442-a694-4222-a36f-\
6b39873e9055"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "Pn3", "]"}]], "Input",
 CellChangeTimes->{{3.947550524731968*^9, 3.947550526456079*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"a7fd6233-4889-4fa5-a72f-98c8b02e3581"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"3", " ", 
       RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"3", " ", 
       RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.947550526891675*^9, 3.947559145882526*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"e9b32110-4286-42c8-b5c0-3115f8bcc809"]
}, Open  ]],

Cell["\<\
Since the latter two eigenvalues are the same, we have only two cases r=1, \
and r=3.\
\>", "Text",
 CellChangeTimes->{{3.9475505421319036`*^9, 3.947550591864025*^9}, {
  3.947550638622045*^9, 
  3.947550642262899*^9}},ExpressionUUID->"e398d420-c351-44e7-8cbc-\
6baa0c270925"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["r=3", "Subtitle",
 CellChangeTimes->{{3.947550651770932*^9, 
  3.947550658721636*^9}},ExpressionUUID->"c4fde748-7428-427c-b709-\
64d0a3f1d310"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], "==", 
    RowBox[{"1", "/", "\[Alpha]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947550754602285*^9, 3.947550764105487*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"e284abff-b692-4729-8a2d-58c7823db2d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"2", "+", "\[Alpha]"}], 
     RowBox[{"3", " ", "\[Alpha]"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.947550764499352*^9, 3.947559147594692*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"8e3aa345-8c0e-4124-9aa9-11ffa7612871"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn3r3", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Pn3", "/.", 
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", " ", 
  RowBox[{"Pn3r3", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.947550768826395*^9, 3.9475507909410477`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"413d7653-e002-4d2c-8b36-082c6674bc91"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"2", "+", "\[Alpha]"}], 
       RowBox[{"3", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"3", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"3", " ", "\[Alpha]"}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"3", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"2", "+", "\[Alpha]"}], 
       RowBox[{"3", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"3", " ", "\[Alpha]"}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"3", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"3", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"2", "+", "\[Alpha]"}], 
       RowBox[{"3", " ", "\[Alpha]"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9475507854546137`*^9, 3.947550791137*^9}, 
   3.9475591487443457`*^9},
 CellLabel->
  "Out[33]//MatrixForm=",ExpressionUUID->"8d5a9610-5cf2-4308-aad6-\
373adaeca65c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"Pn2r2", ">=", "0"}], "]"}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"aabecb63-88d4-46eb-987a-ebff147dd705"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "||", 
  RowBox[{"\[Alpha]", "\[GreaterEqual]", "1"}]}]], "Output",
 CellChangeTimes->{3.947550806962122*^9, 3.947559150381242*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"1fd642e0-cb92-4d40-9f6c-8d62d276b7ff"]
}, Open  ]],

Cell["Again there\[CloseCurlyQuote]s really just one choice up to \[Alpha].", \
"Text",
 CellChangeTimes->{{3.9475523054750566`*^9, 
  3.9475523215249434`*^9}},ExpressionUUID->"dcdddeeb-0569-4674-8277-\
612c0c673dee"],

Cell[CellGroupData[{

Cell["State-space", "Subsection",
 CellChangeTimes->{{3.9475508252011213`*^9, 
  3.947550828061734*^9}},ExpressionUUID->"421aeaae-c95b-4030-8d93-\
3f645976e65d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", "-", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", " ", "=", " ", 
   RowBox[{"Unembed", "[", "\[Lambda]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cn3r3", "=", 
   RowBox[{"ConstructC", "[", 
    RowBox[{"n", ",", " ", "\[Alpha]", ",", "Pn3r3", ",", " ", "\[Chi]"}], 
    "]"}]}], ";", " ", 
  RowBox[{"Cn3r3", "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.947550843631473*^9, 3.9475508447489023`*^9}, {
  3.9475508770085773`*^9, 3.9475508892586613`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"2e8191af-3d4d-4bf2-ab33-591acc2a4d96"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "8"}], "-", 
         RowBox[{"4", " ", "\[Alpha]"}], "+", 
         RowBox[{"3", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"5", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"x", "[", "1", "]"}]}], "+", 
         RowBox[{
          SqrtBox["6"], " ", 
          RowBox[{"x", "[", "2", "]"}]}], "+", 
         RowBox[{"5", " ", 
          SqrtBox["6"], " ", "\[Alpha]", " ", 
          RowBox[{"x", "[", "2", "]"}]}]}], 
        RowBox[{"18", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"3", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}]}], ")"}]}], 
       RowBox[{"18", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}]}], ")"}]}], 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"3", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}]}], ")"}]}], 
       RowBox[{"18", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Alpha]"}], ")"}]}], "+", 
        RowBox[{
         SqrtBox["6"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"5", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"x", "[", "2", "]"}]}]}], 
       RowBox[{"9", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"3", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}]}], ")"}]}], 
       RowBox[{"18", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}]}], ")"}]}], 
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"3", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}]}], ")"}]}], 
       RowBox[{"18", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", "+", 
        RowBox[{"4", " ", "\[Alpha]"}], "+", 
        RowBox[{"3", " ", 
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"5", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"x", "[", "1", "]"}]}], "-", 
        RowBox[{
         SqrtBox["6"], " ", 
         RowBox[{"x", "[", "2", "]"}]}], "-", 
        RowBox[{"5", " ", 
         SqrtBox["6"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "2", "]"}]}]}], 
       RowBox[{"18", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9475508877046547`*^9, 3.947550889858099*^9}, 
   3.947559152366005*^9},
 CellLabel->
  "Out[37]//MatrixForm=",ExpressionUUID->"5f78c4ba-1813-417f-a38c-\
ae8e069a5133"]
}, Open  ]],

Cell["\<\
To save computation, let\[CloseCurlyQuote]s specialize to a particular case \
of \[Alpha].\
\>", "Text",
 CellChangeTimes->{{3.947550976838888*^9, 3.947551030299741*^9}, {
  3.947551576022152*^9, 
  3.947551579674884*^9}},ExpressionUUID->"5351c71f-f191-4280-9bf5-\
09caf37a22e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fixed\[Alpha]", " ", "=", " ", "10"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigs", " ", "=", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"Cn3r3", "/.", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", "->", "Fixed\[Alpha]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"cons", " ", "=", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigs", ">=", "0"}], ",", " ", 
      RowBox[{"0", " ", "<=", " ", "\[Chi]", " ", "<=", "1"}]}], "}"}], ",", 
    " ", "\[Lambda]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.947551031765792*^9, 3.947551057855249*^9}, {
   3.947551306594718*^9, 3.947551325263648*^9}, {3.9475516945951433`*^9, 
   3.947551694810112*^9}, {3.947551975769395*^9, 3.947551981399468*^9}, {
   3.9475522409781427`*^9, 3.947552241259151*^9}, 3.94755766551578*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"4969efbc-1bc3-44d3-be27-589d13ea6160"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "\[Equal]", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.133\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"]]}, 
           "RowDefault"], ShowStringCharacters -> 
          False], -0.1325996394080481699528917260977323167`15.954589770191003,
          Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"31752", "+", 
                 RowBox[{"10577893", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"869070400", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"9370240000", " ", 
                   SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.13259963940804817`},
       "NumericalApproximation"],
      Root[31752 + 10577893 #^2 - 869070400 #^4 + 9370240000 #^6& , 2, 0]]}], 
    "&&", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "\[Equal]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"603", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"660", " ", 
          SqrtBox["6"], " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"603", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "1", "]"}], "2"]}], "-", 
         RowBox[{"1980", " ", 
          SqrtBox["6"], " ", "#1", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "1", "]"}], "2"]}]}], "&"}], ",", "1"}], 
      "]"}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"-0.133\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"]]}, 
           "RowDefault"], ShowStringCharacters -> 
          False], -0.1325996394080481699528917260977323167`15.954589770191003,
          Editable -> False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"31752", "+", 
                 RowBox[{"10577893", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"869070400", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"9370240000", " ", 
                   SuperscriptBox["#1", "6"]}]}], "&"}], ",", "2"}], "]"}], 
         Short[#, 7]& ], -0.13259963940804817`},
       "NumericalApproximation"],
      Root[31752 + 10577893 #^2 - 869070400 #^4 + 9370240000 #^6& , 2, 0]], 
     "<", 
     RowBox[{"x", "[", "1", "]"}], "<", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.133\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"]]}, 
           "RowDefault"], ShowStringCharacters -> False], 
         0.1325996394080481699528917260977323167`15.954589770191003, Editable -> 
         False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"31752", "+", 
                 RowBox[{"10577893", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"869070400", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"9370240000", " ", 
                   SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
         Short[#, 7]& ], 0.13259963940804817`},
       "NumericalApproximation"],
      Root[31752 + 10577893 #^2 - 869070400 #^4 + 9370240000 #^6& , 3, 0]]}], 
    "&&", 
    RowBox[{
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"603", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"660", " ", 
          SqrtBox["6"], " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"603", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "1", "]"}], "2"]}], "-", 
         RowBox[{"1980", " ", 
          SqrtBox["6"], " ", "#1", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "1", "]"}], "2"]}]}], "&"}], ",", "1"}], "]"}], 
     "\[LessEqual]", 
     RowBox[{"x", "[", "2", "]"}], "\[LessEqual]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"603", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"660", " ", 
          SqrtBox["6"], " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"603", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "1", "]"}], "2"]}], "-", 
         RowBox[{"1980", " ", 
          SqrtBox["6"], " ", "#1", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "1", "]"}], "2"]}]}], "&"}], ",", "2"}], 
      "]"}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "\[Equal]", 
     InterpretationBox[
      TemplateBox[{"Root", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.133\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"]]}, 
           "RowDefault"], ShowStringCharacters -> False], 
         0.1325996394080481699528917260977323167`15.954589770191003, Editable -> 
         False], 
        TagBox[
         RowBox[{"Root", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"31752", "+", 
                 RowBox[{"10577893", " ", 
                   SuperscriptBox["#1", "2"]}], "-", 
                 RowBox[{"869070400", " ", 
                   SuperscriptBox["#1", "4"]}], "+", 
                 RowBox[{"9370240000", " ", 
                   SuperscriptBox["#1", "6"]}]}], "&"}], ",", "3"}], "]"}], 
         Short[#, 7]& ], 0.13259963940804817`},
       "NumericalApproximation"],
      Root[31752 + 10577893 #^2 - 869070400 #^4 + 9370240000 #^6& , 3, 0]]}], 
    "&&", 
    RowBox[{
     RowBox[{"x", "[", "2", "]"}], "\[Equal]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"8", "-", 
         RowBox[{"603", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"660", " ", 
          SqrtBox["6"], " ", 
          SuperscriptBox["#1", "3"]}], "-", 
         RowBox[{"603", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "1", "]"}], "2"]}], "-", 
         RowBox[{"1980", " ", 
          SqrtBox["6"], " ", "#1", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "1", "]"}], "2"]}]}], "&"}], ",", "1"}], 
      "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9475515868010397`*^9, 3.947551696562372*^9, 
  3.947551983309059*^9, 3.947552242784645*^9, 3.9475591554129467`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"747a5c37-cecf-434d-94d3-d54f772e379d"]
}, Open  ]],

Cell["\<\
Again we plot the embedded simplex vectors in red, the reference states in \
green, and the valid region in blue.\
\>", "Text",
 CellChangeTimes->{{3.947552184673081*^9, 3.947552204295106*^9}, {
  3.9475524064571037`*^9, 3.94755242430689*^9}, {3.947559175470847*^9, 
  3.947559176527042*^9}},ExpressionUUID->"7018dad4-a0e5-4fb3-a0b0-\
af6eb0abc1a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimplexVectors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Embed", "[", 
      RowBox[{"UnitVector", "[", 
       RowBox[{"n", ",", "i"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReferenceVectors", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Embed", "[", 
      RowBox[{
       RowBox[{"Pn3r3", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", "->", "Fixed\[Alpha]"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"SimplexVectors", ",", " ", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Red", ",", " ", 
           RowBox[{"PointSize", "[", "0.05", "]"}]}], "}"}]}]}], "]"}], ",", 
      " ", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"ReferenceVectors", ",", " ", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Green", ",", " ", 
           RowBox[{"PointSize", "[", "0.05", "]"}]}], "}"}]}]}], "]"}], ",", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{"cons", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], ",", " ", 
          RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], ",", " ", 
          RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"AspectRatio", "->", "Automatic"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.94755178903421*^9, 3.9475518211567698`*^9}, {
  3.9475518969800663`*^9, 3.9475519392261477`*^9}, {3.947551998335689*^9, 
  3.947552175556739*^9}, {3.947559163543771*^9, 3.947559163809806*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"2e19eaaa-bbb8-4faa-ad05-e6eb0b360b32"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[1, 0, 0], PointSize[0.05], AbsoluteThickness[1.6], 
     PointBox[{{-0.7071067811865476, -0.408248290463863}, {0., 
      0.816496580927726}, {
      0.7071067811865476, -0.408248290463863}}]}, {{}, {}}}, {{}, 
    {RGBColor[0, 1, 0], PointSize[0.05], AbsoluteThickness[1.6], 
     PointBox[{{-0.07071067811865475, -0.040824829046386304`}, {0., 
      0.08164965809277261}, {
      0.07071067811865475, -0.040824829046386304`}}]}, {{}, {}}}, {
    GraphicsComplexBox[CompressedData["
1:eJx1Ul1Ik2EUXkYjlosiizFC7KLWDxj9rAsNTzSEEKkhSIS0mhAtt4ikDG3V
TVkXGkgfBkLZLqIttWZp7uezM3dRjWKY1BaRtXASdtHFbooSVn4vzxt80Qcf
D8/5e857zlnXfKrhWInBYKj78y/gj5ipu7Nwn4GqQPqfXY9zGsbYoH0P1JeC
E7jejjxw5EMHdr0+7NtLX8zl7SMMLBMo7XpdIOqsiS9gn8wHnxjZYFGyCbqt
xfUROPIQDz843qPn0EV/yAPXzxnxeh0g+iyvOtlknv3b12bPqrDT9UTqTj+b
DNuVW7SvrX8+tWWC0j2ZVrWzhVuMZ0LO8hh/Kzk7k/IyOytCh8yzPVwbunjT
G1Q5k6+553Sdp+SJG5cDayOUE8iTIp4QD51f74crXI44Gb1Xvqa8A6Tfm2/r
5zG7EuVK0a/cI/Z92JG0uRxjsh7iUQd+xL/ZNb/4YUChUvHef+aHfvaKfmQd
vANoat62SMkO8dHj36eKl6KcdmucJF/R+rFYfMRhgeQ+7fEH1EHu/dS0ut0c
I9iB64Wf4MceMe+fXYMNhY5xabeJeRPmDXtEq5ekqRrLDkd7kDP+lbn8aJQt
3Vq+vI+O3cm31roEP71Qecfp6mef4ATe+FzbP2P/0fwSk5K9xu+GbCFvMEmp
GY0T+PLr2n0Q+u0V+gT9Za/3nFONEar60uYuWO/K++06cNVTsA7LvWM/9aKO
vNu0L7d/45EE1furD5prH/MmUY9R74PwM/yvGr3TefsA71xaPWovi9NvwfRh
AQ==
     "], {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[0.3], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{25, 5, 1}, {4, 7, 3}, {27, 22, 14}, {8, 7, 4}, {5, 9, 
           1}, {25, 14, 3}, {13, 10, 2}, {17, 11, 7}, {19, 16, 1}, {27, 15, 
           2}, {9, 12, 1}, {21, 13, 2}, {7, 11, 3}, {15, 14, 1}, {16, 15, 
           1}, {3, 14, 4}, {10, 6, 2}, {23, 22, 6}, {39, 73, 9}, {14, 22, 
           4}, {25, 26, 5}, {6, 22, 2}, {23, 24, 4}, {26, 25, 3}, {20, 21, 
           2}, {14, 25, 1}, {22, 27, 2}, {12, 19, 1}, {8, 18, 7}, {15, 20, 
           2}, {22, 23, 4}, {73, 40, 9}, {70, 67, 23}, {43, 33, 5}, {15, 27, 
           14}, {65, 66, 20}, {47, 48, 12}, {63, 62, 17}, {53, 37, 8}, {60, 
           39, 9}, {35, 55, 6}, {50, 29, 3}, {56, 69, 6}, {74, 46, 11}, {71, 
           28, 10}, {49, 34, 13}, {46, 51, 11}, {44, 68, 24}, {55, 56, 6}, {
           30, 64, 18}, {37, 36, 8}, {58, 31, 16}, {28, 61, 10}, {33, 59, 
           5}, {59, 32, 5}, {45, 74, 11}, {42, 71, 10}}], 
          PolygonBox[{{66, 41, 21, 20}, {52, 53, 8, 4}, {29, 72, 26, 3}, {61, 
           35, 6, 10}, {67, 44, 24, 23}, {40, 47, 12, 9}, {64, 57, 7, 18}, {
           51, 50, 3, 11}, {62, 45, 11, 17}, {41, 49, 13, 21}, {32, 60, 9, 
           5}, {57, 63, 17, 7}, {69, 70, 23, 6}, {38, 58, 16, 19}, {48, 38, 
           19, 12}, {31, 54, 15, 16}, {36, 30, 18, 8}, {72, 43, 5, 26}, {68, 
           52, 4, 24}, {34, 42, 10, 13}, {54, 65, 20, 
           15}}]}]}, {}, {}, {}, {}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[{73, 40, 47, 48, 38, 58, 31, 54, 65, 66, 41, 49, 34, 42, 71, 
        28, 61, 35, 55, 56, 69, 70, 67, 44, 68, 52, 53, 37, 36, 30, 64, 57, 
        63, 62, 45, 74, 46, 51, 50, 29, 72, 43, 33, 59, 32, 60, 39, 
        73}]}}], {}}},
  AspectRatio->Automatic,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.7071067811865476, 0.7071067811865476}, {-0.408248290463863, 
   0.816496580927726}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.947552030606505*^9, 3.947552046583418*^9}, {
   3.947552084598699*^9, 3.947552176569659*^9}, 3.947552245910762*^9, {
   3.947559164802802*^9, 3.9475591794871397`*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"eb10ac36-174d-4a94-98da-67ea7823806b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["n=4", "Section",
 CellChangeTimes->{{3.947552278799033*^9, 
  3.9475522799240503`*^9}},ExpressionUUID->"43c1552a-55b1-40b6-9c16-\
3fc2e9ac0936"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}]], "Input",
 CellChangeTimes->{{3.947556445890122*^9, 3.947556450976499*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"e8867775-9d9b-4d3f-8126-97eb4406f91b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn4", " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "1", "]"}], ",", 
       RowBox[{"p", "[", "2", "]"}], ",", 
       RowBox[{"p", "[", "3", "]"}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}], "-", 
        RowBox[{"p", "[", "3", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "2", "]"}], ",", 
       RowBox[{"p", "[", "1", "]"}], ",", " ", 
       RowBox[{"p", "[", "4", "]"}], ",", " ", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}], "-", 
        RowBox[{"p", "[", "4", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "[", "3", "]"}], ",", 
       RowBox[{"p", "[", "4", "]"}], ",", 
       RowBox[{"p", "[", "1", "]"}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "3", "]"}], "-", 
        RowBox[{"p", "[", "4", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}], "-", 
        RowBox[{"p", "[", "3", "]"}]}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "2", "]"}], "-", 
        RowBox[{"p", "[", "4", "]"}]}], ",", 
       RowBox[{"1", "-", 
        RowBox[{"p", "[", "1", "]"}], "-", 
        RowBox[{"p", "[", "3", "]"}], "-", 
        RowBox[{"p", "[", "4", "]"}]}], ",", 
       RowBox[{"p", "[", "1", "]"}]}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"Pn4", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.947555978165847*^9, 3.947555998792366*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"b0094487-9743-473a-af73-f9b0b29366f7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{"p", "[", "3", "]"}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}], "-", 
       RowBox[{"p", "[", "3", "]"}]}]},
     {
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "4", "]"}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}], "-", 
       RowBox[{"p", "[", "4", "]"}]}]},
     {
      RowBox[{"p", "[", "3", "]"}], 
      RowBox[{"p", "[", "4", "]"}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "3", "]"}], "-", 
       RowBox[{"p", "[", "4", "]"}]}]},
     {
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}], "-", 
       RowBox[{"p", "[", "3", "]"}]}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}], "-", 
       RowBox[{"p", "[", "4", "]"}]}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "3", "]"}], "-", 
       RowBox[{"p", "[", "4", "]"}]}], 
      RowBox[{"p", "[", "1", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9475559989582787`*^9, 3.9475591837116623`*^9},
 CellLabel->
  "Out[47]//MatrixForm=",ExpressionUUID->"6d59c3f3-b994-496b-af2d-\
7389c9d4648a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", " ", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Pn4", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "==", "1"}], ",",
     " ", 
    RowBox[{"p", "[", "4", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947556030629445*^9, 3.947556039996254*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"7c7c1b74-296c-458a-97d2-9e6408ff3369"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "4", "]"}], "\[Rule]", 
    RowBox[{"1", "-", 
     RowBox[{"p", "[", "1", "]"}], "-", 
     RowBox[{"p", "[", "2", "]"}], "-", 
     RowBox[{"p", "[", "3", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.947556036166033*^9, 3.947556040391533*^9}, 
   3.947559185644094*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"cc71d38e-3afc-4d6d-898e-98dc72f2cc05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Pn4", " ", "=", "  ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], ",", 
        RowBox[{"p", "[", "2", "]"}], ",", 
        RowBox[{"p", "[", "3", "]"}], ",", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}], "-", 
         RowBox[{"p", "[", "2", "]"}], "-", 
         RowBox[{"p", "[", "3", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", "2", "]"}], ",", 
        RowBox[{"p", "[", "1", "]"}], ",", " ", 
        RowBox[{"p", "[", "4", "]"}], ",", " ", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}], "-", 
         RowBox[{"p", "[", "2", "]"}], "-", 
         RowBox[{"p", "[", "4", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", "3", "]"}], ",", 
        RowBox[{"p", "[", "4", "]"}], ",", 
        RowBox[{"p", "[", "1", "]"}], ",", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}], "-", 
         RowBox[{"p", "[", "3", "]"}], "-", 
         RowBox[{"p", "[", "4", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}], "-", 
         RowBox[{"p", "[", "2", "]"}], "-", 
         RowBox[{"p", "[", "3", "]"}]}], ",", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}], "-", 
         RowBox[{"p", "[", "2", "]"}], "-", 
         RowBox[{"p", "[", "4", "]"}]}], ",", 
        RowBox[{"1", "-", 
         RowBox[{"p", "[", "1", "]"}], "-", 
         RowBox[{"p", "[", "3", "]"}], "-", 
         RowBox[{"p", "[", "4", "]"}]}], ",", 
        RowBox[{"p", "[", "1", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pn4", " ", "=", 
   RowBox[{"FullSimplify", "[", " ", 
    RowBox[{"Pn4", "/.", " ", 
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"Pn4", "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.947556047137343*^9, 3.947556076238244*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"5851fc29-e99a-4ee3-b8bd-4f4e3e17d720"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{"p", "[", "3", "]"}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}], "-", 
       RowBox[{"p", "[", "3", "]"}]}]},
     {
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}], "-", 
       RowBox[{"p", "[", "3", "]"}]}], 
      RowBox[{"p", "[", "3", "]"}]},
     {
      RowBox[{"p", "[", "3", "]"}], 
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}], "-", 
       RowBox[{"p", "[", "3", "]"}]}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "2", "]"}]},
     {
      RowBox[{"1", "-", 
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}], "-", 
       RowBox[{"p", "[", "3", "]"}]}], 
      RowBox[{"p", "[", "3", "]"}], 
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{"p", "[", "1", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.947556076431712*^9, 3.94755918670121*^9},
 CellLabel->
  "Out[50]//MatrixForm=",ExpressionUUID->"5705cd8b-2245-4002-adac-\
c2293ff0100a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["r=2", "Subtitle",
 CellChangeTimes->{{3.947556153627139*^9, 
  3.947556158376781*^9}},ExpressionUUID->"f8812245-0870-405d-b2d9-\
cc71b7af976b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "=", 
  RowBox[{"Eigenvalues", "[", "Pn4", "]"}]}]], "Input",
 CellChangeTimes->{{3.947559196887629*^9, 3.947559198979891*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"1d7e2d85-8cba-425a-949d-71aa643ab96d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "1", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "2", "]"}]}]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "2", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "3", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "1", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "3", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.947559199356577*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"e532b435-538a-4df1-b0aa-8dc4e181e580"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "==", "0"}], ",", " ", 
     RowBox[{"d", "==", "0"}]}], "}"}], ",", " ", 
   RowBox[{"p", "[", "3", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.947556167944663*^9, 3.947556188687711*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"3b389875-2733-443d-95b0-42fef8c40748"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "1", "]"}], "\[Equal]", 
   RowBox[{"p", "[", "2", "]"}]}], "&&", 
  RowBox[{
   RowBox[{"p", "[", "3", "]"}], "\[Equal]", 
   RowBox[{
    FractionBox["1", "2"], "-", 
    RowBox[{"p", "[", "2", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.947556176132555*^9, 3.9475561890207567`*^9}, 
   3.947559201198909*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"884d4fc0-111f-4d9e-b6a3-4c6608872847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn4r2a", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Pn4", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "2", "]"}], "->", 
        RowBox[{"p", "[", "1", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"p", "[", "3", "]"}], "->", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "-", 
         RowBox[{"p", "[", "1", "]"}]}]}]}], "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"Pn4r2a", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.947556219094314*^9, 3.947556260935707*^9}, {
  3.947556357235607*^9, 3.947556365213338*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"47376da6-aa81-44af-a46d-f15bdbc91d0d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}]},
     {
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "1", "]"}]},
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "1", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9475562546895123`*^9, 3.9475562611015167`*^9}, {
   3.947556363544298*^9, 3.9475563655285273`*^9}, 3.947559202324212*^9},
 CellLabel->
  "Out[54]//MatrixForm=",ExpressionUUID->"3070ab4c-cc6f-4bd7-80f9-\
114f5bbd828c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "Pn4r2a", "]"}]], "Input",
 CellChangeTimes->{{3.947556289703117*^9, 3.947556319072308*^9}, 
   3.9475563672033453`*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"ea3424d1-564a-4712-a6ec-59cb3f25e531"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"p", "[", "1", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9475563000588417`*^9, 3.947556319373856*^9}, 
   3.9475563674781923`*^9, 3.9475592042285557`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"3b3bfec5-b146-46ea-8cc9-f9d5a2bbd5f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"p", "[", "1", "]"}]}]}], "==", 
    RowBox[{"1", "/", "\[Alpha]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947556323111602*^9, 3.947556331262168*^9}, {
  3.947556384700056*^9, 3.9475563856166153`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"4f461acd-ff4e-41b8-9f5d-3166ea15c16b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"1", "+", "\[Alpha]"}], 
     RowBox[{"4", " ", "\[Alpha]"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.947556331757586*^9, {3.94755636928307*^9, 3.9475563867213173`*^9}, 
   3.9475592054180613`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"68a4aafe-e61e-4328-b2a0-8d13facb3b84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn4r2", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Pn4r2a", "/.", 
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", " ", 
  RowBox[{"Pn4r2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.9475563706180773`*^9, 3.947556399192565*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"751280d9-55af-4197-9689-06d1b3d98124"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]]},
     {
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"1", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.947556390473703*^9, 3.947556399389532*^9}, 
   3.947559206789749*^9},
 CellLabel->
  "Out[57]//MatrixForm=",ExpressionUUID->"3e28d710-b39e-4116-8fc2-\
bb91dd6f1ead"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"Pn4r2", ">=", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.947556402435399*^9, 3.947556406057332*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"43fbbcf3-fec9-4d7e-884d-eb1a85e213e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "\[LessEqual]", 
   RowBox[{"-", "1"}]}], "||", 
  RowBox[{"\[Alpha]", "\[GreaterEqual]", "1"}]}]], "Output",
 CellChangeTimes->{3.9475564064147797`*^9, 3.94755920907792*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"7f5d62bf-492c-4dc4-b5c0-f2be58589765"]
}, Open  ]],

Cell[CellGroupData[{

Cell["State-space", "Subsubsection",
 CellChangeTimes->{{3.947556422322394*^9, 
  3.947556423278348*^9}},ExpressionUUID->"a885037e-4d3b-45e8-bb5a-\
c4fa917975ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", "-", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", " ", "=", " ", 
   RowBox[{"Unembed", "[", "\[Lambda]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cn4r2", "=", 
   RowBox[{"ConstructC", "[", 
    RowBox[{"n", ",", " ", "\[Alpha]", ",", "Pn4r2", ",", " ", "\[Chi]"}], 
    "]"}]}], ";", " ", 
  RowBox[{"Cn4r2", "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.947556456943287*^9, 3.947556470987323*^9}, {
   3.947557484704873*^9, 3.947557485698325*^9}, {3.94755823262846*^9, 
   3.947558232700979*^9}, {3.947558733799802*^9, 3.947558733918007*^9}, {
   3.947558843033082*^9, 3.947558847341281*^9}, 3.9475592152569113`*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"99e4ff6c-1df9-4486-9ac2-96dd8d8cd83d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"6", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"6", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"6", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"6", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"6", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"6", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"6", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"6", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.947556472369706*^9, 3.9475574881657047`*^9, {3.947558234050921*^9, 
   3.947558247197372*^9}, 3.94755873515926*^9, 3.9475588522164*^9, {
   3.947559218126986*^9, 3.947559218972349*^9}},
 CellLabel->
  "Out[67]//MatrixForm=",ExpressionUUID->"27e61098-db30-4e0f-883f-\
c44d2dd8fde0"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fixed\[Alpha]", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigs", " ", "=", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"Cn4r2", "/.", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", "->", "Fixed\[Alpha]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Consn4r2", " ", "=", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eigs", ">=", "0"}], ",", " ", 
       RowBox[{"0", " ", "<=", " ", "\[Chi]", " ", "<=", "1"}]}], "}"}], ",", 
     " ", "\[Lambda]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.947556456943287*^9, 3.947556470987323*^9}, {
   3.947557484704873*^9, 3.947557485698325*^9}, {3.94755823262846*^9, 
   3.947558232700979*^9}, {3.947558733799802*^9, 3.947558733918007*^9}, {
   3.947558843033082*^9, 3.947558847341281*^9}, 3.9475592152569113`*^9, {
   3.94755952207073*^9, 3.94755952249162*^9}, {3.9475595624175663`*^9, 
   3.947559563090322*^9}, {3.947559605203059*^9, 3.9475596055469427`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"b404dd36-d1d4-4633-9157-f0fe55227bea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigs", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.947557638656313*^9, 3.947557643360688*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"c31bc390-ae59-4d20-81d8-13903fda088a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{
        FractionBox["1", "36"], " ", 
        RowBox[{"(", 
         RowBox[{"9", "-", 
          RowBox[{
           SqrtBox["3"], " ", 
           SqrtBox[
            RowBox[{"3", "+", 
             RowBox[{"96", " ", 
              SuperscriptBox[
               RowBox[{"x", "[", "1", "]"}], "2"]}], "+", 
             RowBox[{"64", " ", 
              SqrtBox["3"], " ", 
              RowBox[{"x", "[", "1", "]"}], " ", 
              RowBox[{"x", "[", "2", "]"}]}], "+", 
             RowBox[{"32", " ", 
              SuperscriptBox[
               RowBox[{"x", "[", "2", "]"}], "2"]}], "-", 
             RowBox[{"64", " ", 
              SqrtBox["6"], " ", 
              RowBox[{"x", "[", "1", "]"}], " ", 
              RowBox[{"x", "[", "3", "]"}]}], "-", 
             RowBox[{"64", " ", 
              SqrtBox["2"], " ", 
              RowBox[{"x", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "3", "]"}]}], "+", 
             RowBox[{"64", " ", 
              SuperscriptBox[
               RowBox[{"x", "[", "3", "]"}], "2"]}]}]]}]}], ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "36"], " ", 
        RowBox[{"(", 
         RowBox[{"9", "+", 
          RowBox[{
           SqrtBox["3"], " ", 
           SqrtBox[
            RowBox[{"3", "+", 
             RowBox[{"96", " ", 
              SuperscriptBox[
               RowBox[{"x", "[", "1", "]"}], "2"]}], "+", 
             RowBox[{"64", " ", 
              SqrtBox["3"], " ", 
              RowBox[{"x", "[", "1", "]"}], " ", 
              RowBox[{"x", "[", "2", "]"}]}], "+", 
             RowBox[{"32", " ", 
              SuperscriptBox[
               RowBox[{"x", "[", "2", "]"}], "2"]}], "-", 
             RowBox[{"64", " ", 
              SqrtBox["6"], " ", 
              RowBox[{"x", "[", "1", "]"}], " ", 
              RowBox[{"x", "[", "3", "]"}]}], "-", 
             RowBox[{"64", " ", 
              SqrtBox["2"], " ", 
              RowBox[{"x", "[", "2", "]"}], " ", 
              RowBox[{"x", "[", "3", "]"}]}], "+", 
             RowBox[{"64", " ", 
              SuperscriptBox[
               RowBox[{"x", "[", "3", "]"}], "2"]}]}]]}]}], ")"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.947557642055056*^9, 3.9475576437127523`*^9}, 
   3.947558263995693*^9, 3.9475587518080463`*^9, 3.9475592408839607`*^9, 
   3.947559531942428*^9, 3.947559580803673*^9, 3.9475596221192093`*^9},
 CellLabel->
  "Out[125]//MatrixForm=",ExpressionUUID->"77d20fb0-dd63-47ff-aed3-\
11324dd2aedc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "Consn4r2", "]"}]], "Input",
 CellChangeTimes->{{3.947558077557623*^9, 3.947558097689015*^9}, 
   3.9475588568582582`*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"87c25f5c-f327-4cd3-b29e-225bf6ed5ecf"],

Cell[BoxData["26"], "Output",
 CellChangeTimes->{{3.947558079973549*^9, 3.947558098058935*^9}, 
   3.9475582780947323`*^9, 3.947558867014153*^9, 3.9475592428090897`*^9, 
   3.947559533813509*^9, 3.9475595822114677`*^9, 3.9475596234462852`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"17bc90e8-667c-4f19-9f4c-864d8d70ef6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimplexVectors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Embed", "[", 
      RowBox[{"UnitVector", "[", 
       RowBox[{"n", ",", "i"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReferenceVectors", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Embed", "[", 
      RowBox[{
       RowBox[{"Pn4r2", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", "->", "Fixed\[Alpha]"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"RegionPlot3D", "[", 
     RowBox[{"Consn4r2", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "1", "]"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "2", "]"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "3", "]"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", " ", 
      RowBox[{"PlotPoints", "->", "25"}], ",", 
      RowBox[{"MaxRecursion", "\[Rule]", "5"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Opacity", "[", "0.5", "]"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{"SimplexVectors", ",", " ", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", 
         RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
         RowBox[{"AspectRatio", "->", "1"}]}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{"ReferenceVectors", ",", " ", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", 
         RowBox[{"PointSize", "[", "0.05", "]"}]}], "}"}]}]}], "]"}]}], "}"}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.947557596452883*^9, 3.947557621623589*^9}, {
   3.947557705209979*^9, 3.947557723777492*^9}, {3.9475579006648903`*^9, 
   3.947557902134863*^9}, {3.9475580661700983`*^9, 3.9475580882026453`*^9}, {
   3.947558130394795*^9, 3.947558183386639*^9}, {3.947558214433826*^9, 
   3.947558217907805*^9}, {3.9475582963974953`*^9, 3.947558330802269*^9}, {
   3.947558774050232*^9, 3.947558800658416*^9}, 3.947558858969606*^9, {
   3.947559329001698*^9, 3.9475594018063507`*^9}, {3.9475594514936113`*^9, 
   3.947559479714684*^9}, {3.947559518624174*^9, 3.947559519869794*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"c19d845e-f1c0-4f40-9e0c-6a7dc8bf203d"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
dSi3fqaO953fXy7tZxpEubrfVcuf+umzZOrW1cKocnsW5RwNlNdXznTVvs/K
cVW9AX8fMSt0/AQfYfmVsfoOA32FG6KdQyc/1ugBnlJ66K+2l+M0vG1gvay1
99l8zvC4veD9Ns24nclDXsLykJeA47yEOeQl4DgvLTna7dm/u8ej+WOuRn6L
9fd/j5RjXLMOsNl+dNQjFzTe1sqP+Fx+WadO7L46w+NtIyOcl56LH9eWvEDz
hpx+nLV6slZY/PipY+cmQM/Cp77hFbuxe4xxPklt+2LGgGh31O/nknd/p4+y
8W+G8oxWj8WSMU4VJzKO80y9KrN3nnK+Q/MG5M8V4p/vT7iC8k+uRs80s/+W
NlvB38+szjODTW+Xbz70As0b+P4q4G0zO5rbp7LzNTifAMf55KFoRtdIFzwO
J6tEsbyuJ/G4gpQb4Z/r7m9D5fH9IyBfekrNmr/D4jX2NB47os/cOPb+AcS7
OA8/v6VbnJA+o9SOtsmefN4Qf/qvuNjcdtQhyvn5FNOTt1dMTLvCyVmT4mvO
djiqyRsgD3zSxsfhbe9EC76XPkQMvHuXykP825KeS85320k5P79megb7u/s+
f3afcsgbh6t223HKKVSQ6rO81zWaT2i+e9K1Zp2+q1BeYj/AOwVsDnQYsZeW
j/MPN/5V5R8sD/kHy0P+AY7zD+aQf4Dj/IP5uHVTizrUZ/dl4jzT4sfobV6N
9lMOeQDL33R2PrhyObtHF+cZ4DjPXH8av8jnrQdRzS84/cBd7d5bDX6bp9Fv
Hn6ydekPrFycZ+KUPENwnsHyMG6R7umYZW5POdhzr53Dq+o/JxGcl0APzj81
lPxDcP7B8jCeAQ55o4g47h/UO14oLapLqHibcnz/Dh63DD/epnZuXMF9ZKp5
h3o/Vor3mYNWmhhPRfd9ivJ660X/XXOLEl56D+tVe58z5ep9QLU8jDc8lHxF
cL6yUvIVtodge2B8ot6/kvLGz6mzm25zDBEwh3FIFenoex8nwucfHVki/lth
8C3C5w29oFPyCcH5JEC0Y+4vB8LnJSOjC0qeITjP5Cn5geD8APVkOA/oC8kD
+kLygL6QPKAvJA/oC8kD+kLyAONOoXeXhFRm93/iPCDFt/eYoELyAJMfN2li
hchleZQbzgN6TR6wGzUtf3TbQILnO1i+QpmHLaMeJcv3Di3wDyR4HiTxf677
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
Gsnu4QF7yiTklt89MEQj36LLzK+LjO5q5KOmmpQ16mInHPjrc/U2U/P4cxID
5XMRpudm5/HnEhRuvcU2l+e27L6ahg/iEr8deKThkWMq/9O+QwDlcN+I+Nts
qD6V6gcunXcIW5xC5Z2sTExytmfy308h8nlxZ4+lnELfYyhySW7KykyeJ/pS
/dHv546vOiRS+V6Ld07Cm/U1rn6sl0334UCPaIeZ66FMnit6zDqdB/0FP6L9
kt3vSmXwXPW8Waet2he9clVjj79xWu78VnepPcCHi6WOiHEmuH46SbUwreC+
3oLnleoF1ydwXJ8qbjaoQjK1xzWwxJzy09P4ehZ59fGNeuwYye5rAztBbsCS
Zr6n18QJXyU/brBPvudEb8K+j0++f5J4SOcxzJotTqP1CfKSffkpKZSDfOgp
j0P5CeyeKQn/ifYn7a9a7vNdn8bXc0F9Lv4nhXJsp0fd5b1Ntx2j+oELH1IX
lnzuTvXL7bs3jZ5H4dr3YwrPVfUZFjfr1vUwd4LLLV93f+Iu/yCN/GexuMfX
C+4NEe2nemZMjb1mHk7LhXrH7Qsct6+Kc+2r5v0nJtD6By55V+CPOFo/RQ+/
O5xUOoH+HXD47Phr1orGzjG03oA7zFr6/Eh0sMI3h5E9b4K2JAUl0nYBPdLw
40oHdu8e6HnkN+zu24qxPK8WS/r1/jCwZ3wirX+o5wqri/apX5+dr8L2ZFY+
OHp3o6kE9LS/I/R8lptIzwFAvUn2uI5K4Lmq3moKrpNOWvsTsH/P6h03H7Rm
5/Fxff4JWP/QpqkXtUds36TsabQ+aftKf30hMo7noj2jR25akfJXLM9V9iSH
Jf+u/FZb7rJu302PmSRQPe/jdg0wH4K+F13lP96XjLeYLGD6VecLOH9Tn69U
+5uKc/6m5mp/U52n4PwNuPTvdrEfAf+h5/cXOUeauUQK0I4bJg8YN/3vcFoO
cCkPjB0VzueNVwlUj4eVq+m0IwGUT+80obLVryje3yR+0NW06aEwngcq46R2
X8N5f6umnPu/mRTCc1FPHWPTE/u6RlM/ged98E/uqDnvQijHzyt9f/rTPfep
HqneW4yl7UbU/UWd8qGU4/qs3OyYcdThaOqHwK0/ZCYeqx9Gy82ZObCPxfJo
3k/E9r13+fvccWahlKvL7TIolH9/QOUPid0ybwfap2n8qtWlt5fOTM5E8rpC
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
3pf8P/tiBxc=
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.5], EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
yg==
            "]], Polygon3DBox[CompressedData["
1:eJw13XW8RkXxBvD31lsXJSQsurtDFKQkFQEBaaRbKZEOpZEQEAMUFBBBEUSk
QxApUQREpaSUkO6G3/Nl9vfH+dyds3v27HvOnt2ZZ56ZO+vW31jv66OdTmey
1+mM5+8G/U5n6Zx4fqzT2WbQ6bzc7XSGOf9B5LciD9Pus5HnSeNBKrbM38Mi
n5xrpkvb+SKvFHmnyG9OdDpLpr/JlB/O9Zvm+m3yd9mRTuczObZN+Zs5d3ja
fz9trk3bUf1GTrEzMl7jeSbtnkrfc092Ou+nnGInXXfeG6t+9T/M8Yhyrvl0
6raK/FIaTUSeIfIWflPkeSOvEHmHyK9HnjHyQpE3j/xC5Be61feb6euNDORj
qZ8j8vapfy0VU+f3rxLZQ/tt6r+W+qMj/zDy9Ln2ixnv/Ck/mus3S/3iqV89
9bvl3Ds6jjyF592e6RTpb/mUF3I+z/OUtFksbZ9M3RPp7+T0d3/Kj6Y8Ry5a
JvJUqf9vzm0xqOfhea3pGefa30RYIuVTU74+/f0rf1eJ/IUc96f8Xc+gPavH
u3WNa9dyLuXHc6yd8pdz/CflV9JmyvQ/Zcb3fvp+PNd9NHUfyfFYym+39+Ee
7tVNu+kirxz5ochfyngXaG03z/VrRp4n8rGpuzLjOyF/5xutMRnbcTnmTvmB
tH8sHR84Ufdz3/9G/kKufzNzZ/ecvyLXH5m/M6X+0zn+lvJHcv+Zcv8vuWfk
6SPPZV5H/l/kTfJ3vsjz59jYO0mfs6Y8XdqNpr+xvI8FIm+aunN9CzmmaO/T
+M3Pj3bqGXlWU0eeLfJ6kZ+IvGHaL5Pyc2m/Vdp/MvXzpn6jnHs29f30v3Tk
bSOfn7YfTf3MkbeJ/Erq38t45oz8iZwfH9Zz8/wWbM/ggLSZ0rtJ+T9pu2vu
sVSn+tT3QpGPTd3iafftXL9n5L1Td07kv0deNv2uF/l76eNjuf5/kb+Q5zlL
rvl65I/n74qRV87x6ZTPM99Tnsn3n/HOHHmrXP/FXHd3+tsv/f8i8vnp/77I
b6fNjGPV/s7UXZD2q+b62SK/16/vye81v57KNe/qc6zur/5933nqN0z9WZFn
zfWrRV7UvEr/W/Tr3XrWt0V+M/Knxmqsxrda2l+U+rnTzwOp3zdj+HGu3zPX
Lxz54vx9ztqS9lumzd6RfxD57Fwza+STcv1sGe/v0//maT9V2k2Z4yPmfY5f
p/2Taf9+2m+e9i9a33zHOV7qV5vP5frlRuraA9P+bM8n7edM+30j/yTyLyLP
Hvn7ud88aXtZ7rdN7vfxtt6sn/pncu7qyCOpnz19faNb88X6tlb7Pq2B1kpr
gLXgxW7Jzr+Zkzt0a/zGsmPKb+TvaC1DnXfGao39SKfmtLn9UrfWJt+8b986
aNnyjfvWd0phuvydPsfOKZ8wqPli3ryRG7/iHac8bY7XUv5Fft8KI9X+9chX
5h7vmt+Rd8n12+aYOuVpcmyf8vHp7/Mjdf3L/fpGP5b203Tq2+14Xvnz1ZR/
3q/37v3PMFZj0Ke+P5lj15R3SX+Lpv2WaX9e2l+W+7/ZqXu696fGaz3Q93P5
oePpf8HIm0X+RdofH/nTGc+l1o68n1e7NR7jOqdf7bRfuO0hvts52/z1va+Y
63/aqW/Qt7hq5PNSPiztlk5/v7JmR74ox7dzbtP0+VrG9nzu86fUT5/2X07d
8envitSdlL+HRD60fcNn5/qvp3xUylPkms+l/amRz4p8fdqvlz53iXyENTv1
X468nftHnuxWv/pfO8cJ9sRurd/W8Xcy3o+nv3Uin5i6q/o1vs9plzHukPpN
In/W2uV9R9421x2b9j/yLNLXWzk/1qk5Z+79whpvP86xkt+b48B276m9u9xv
/cinRL46ff8z7T8/Wn3oyx7j3Ftt79kp159C37Dmj9c5de5l7m6cPpalC6S8
Xca3UPrf3/tO21nzfHfI3xMjn5E2n8r9T0v7z9AFzA/6z1itvQu0PrZO+yPS
/rTIM6T9j60vmR8/yvHv9P1a6tdP+aC0PT/1R0e+Iu0vM08iL5423458eeTb
cq9nc/R8w955ymfTr0ZqPXkh8jm9Wk8+2taX0yMvEvnyPIPtM/5z0v+jvuX0
t0n6XzL1R0a+OvId/fpLpmNdmfLBGe/Vrfzn1B+b66+JfFXkhXP95uM1t34f
ef7Iv83fgzr1ji5JeZFeyc7fnOs3TPs9Ix8decq0/501hH5m/4u8e9q/bD5F
viP33jX1J0X+adrPRLccK12QTugZfCP1J6f+zNTPnPrlc/3ukdfN+QXyexeL
fHDk36X+1tx/vsh7Rf5u5MsjX5q/l3m+7Tccnut+18Y+b7fu4XkPxurea+ea
hexFKb8yqO9lz7Y+2w/ss/bbaVsb+6G9cTd7Vtpvn78HRz4kxw5j9b68v+3s
San/Zds/vx551kFd53pr5i4p3536o+kzKc9O37RvRz458mW5/yn5e03k63J8
P+VjMt5fpXxUyvOl/bRpf3jkUyNfbv+OfEzkPSKfHXmqyAc0Xfv0yE+O195k
rD+JfG6v1tudIs+Y/uZO+x+2+fur1B+Wvz+LfFaOQ1P+Z9qfmPLMabd33sf8
+Xtm5I1zvJe+f5v6TVOeL+f3H9Y34ds4PNfOm/4fiHyg5+hdZKP5Qc59pz2L
mVOevd3/7znWmajfd2jKO6b+TOt15BMi7xP53Mj3pb+1I7+Qe/fS3/8i/yby
oml3iPU18uqR90z7OdL/9O157ep3teelvzMiX92tes/vR5GvjPz5yH+I/IPI
V0ReLfLNrf21kT9I/7dE/lLOH5/7LU+vjXxSex9/Sf1hkb8XebHcf8GM8fSJ
WpOsTU/16n0uaVz0M/tn6u6MfHHkswb1/s2DJQY1X45q41km8juRb4p8ZuRl
I78R+frIp0VeMvJH2Q+Rf0l/jvzp9HuK9xn5um49F89n1TYH7831J5HT7tjc
/57Ix0b+U+RpMvYV8vfaNt88n7dTf0PkH7bxmKNHjNQ7NeZn817WSHmvlH+e
9n+zPrXxLZX2K6e/G9vz9vzv7NX132/jf5Y+F/noyAtEvintfxn5ghxL0L/b
/PC8L831F6TNNHl+d0XeYFDP0fO8O/JD1jPv0fqZ42J6Qp7P0ynfmfJX0v4T
kZ9odStH/mx7n5dEvpV+mPp/pPxwyrPleXwm8tRsj5xbP+2Xj/wJtlDkjSK/
l/Hfar6ln59Zrwd1v9+l/invI+2fi/zX1M+a/j4f+YXI20S+iD4Y+b+RL0r7
lQb1/D2vqyP/pVvXPx/5isirWQ8inxd5sbT7ca4fGG/kjSKfOqznbf5el/Z3
5vrf5+8zIzWGy8dq/nq/l6X8Z99brv8f/SfyF9L/+YOyPz2v51KeJfUvp/6G
yGtEXo7O2trfnut/k7+PR/5PjgvH6vs2//Zv++Nf8vfJkXrmd6S8/0TZ8rdb
a1L/Xe+VPp7juLF6P57Hn1NeL/eboV993xZ5nUGtj0emfIm1a1jn1RuDPl/t
1bs/IeVF0/7EsVq7D27nzsy5q9r3+ljKj9DfIs/Ftsz7eb1Xv8/6vHjqX4l8
WeTjIy9Cv4Bh2Jsif3lQ9/R7YBTGskTq/5X266W/X2V8W+fvsyM1Px/ImLea
qOdtPt3frWfC1mYDe1Zbpv4p84Uu1C37VP0d7Xnsw6ZK/fWR/576uVL/TuRv
5vy5ud+i9I20vyX1X4JfTNTz1/d9af+NyB9EHkmbPVJeqtm/nve6ab9I5G7k
b6Xu/GGttzvYuyMfEXmR/P1F5K/pY6Lmofl4RK6/yHzI9d+AN7C5c+12/cJH
4CRTDmvPpn/Qce3lX+zVfn5p2+/Xj/wn+mjafybt30v/ezabni5/Zo4H6Jo5
91X2Rb/wmgXZOWn/9fw9LfL3c5w3UfrwLs3+o2+slf5/3/SLW/qF2cCyVmpj
HOmVPa+/yWFhNrCbhVv/a6f+qtRfYQ73C4OCPcGgYFMH5Rle2fS/61PerOFn
9MP5uqU/00dviLxo5A3T3x2Rb4t8o+8/8hn067RbPvfbselLN6V+ibRftlf6
FT1r3tR/1fNK3VJsA/thxrRr5FXZVL3St9i/N+fc0t3Sb+nv1zV9kH63b7Nf
2av0KPrUpU0HhMfMkb/30VcHZTOwHXrsvEHtcfTpeydq71unX/gWnOvajGe9
yItHvifyPKn/YeTlIi+f40f9+ktmA6yQ46SJ0sfp5c9lPN+LvIhnlePkiWrD
VmSjufa1tJk25RVT/nG/9PsXrXk5P/9k4TXwIzjSHzOebSJ/Pu3nzvj7kQ/I
3/MjX5g2c+WaQyNfGPlXOS7INTM0+2iv1F+ca78Q+ZzIB6fdEsOy987VNvXX
Dgovgk8tmWOO8Zq7bC822B6jhTHCgmAksJKXI38t8uKRZxsvPG3+Zp+wZ2BG
sE6YAGzgjYnCKmEIsIQtcnynzccFuoXXHtH0ffYIO4A9cG2zGRZt+jV778p+
6du+xZOa/ceGZkv/FNY3LLuNbXBQs1FhrB/a0eOFvXZz/adSNxyv9uyvb0U+
jj2b8b+dMcwSeVrfVup/1i8sbbac+6BbNi68at02hole4bVw24m0/3mvbAe4
8icHZXOzvWFIsLfnGuZnThjTS2m/d9oPcv6oXP9M0xeXiXzksDAF2MIMaTs2
LAwGFjN7p87ZI+wfdAh7x7ITtT/Zp36X8U4zUfuJut9Hvp2+2/auhTO+z6SP
r3QKL5+mW+fVH9D6eDztf57yQunnwNz/DvZW21/sV0v06n2emuuvgTVGPj3l
j8OH037F9L9Zs7/ZpzOl/muR18z56VO/BH2s4QHs/9mto+w7NnbkBSKv3PCB
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
+seGbMqx8mnzjfOR83Xfk/H9NfJZvrNhzRlzxzfsW7aGG6sxW9u/Bc/oFIcc
l9yYjO2XOdYc1p5iXuAZ2mu+njE83ynOI+6jd+q5eX4HN/vUb1+w6VvWeGud
Nc/az6fCt3Jhyl+Eleb6f9o77CuRV0r7f4zWGn1hwwfgBcu0/dsz8qye8E33
amzmLp+9MXrH3rU90bcNM4YdP5vjkvGak+amNcxa9kjkp0eLc3HIoL5B36I1
ga6K9wFLgimd2q35BbswJmOjk9HN6A8HdwvHe6Dtl8s1LAUfEccVl9K6Y/25
J/Wf79Z+yd9+aFsvnmjrN4wFtvBc0wfYtGzhLdP+vrT/+XjhyS81/YaNzhaB
J9+ZvlfwO4aFsb/Ufvs6kXfq1fP1nB+P/PdeYS0wlzkHxZHD18SJw53jnz24
jR3fEyb8aNu/vFt4nmcDd3t9WJwY9i789Phu2b+4k/BbeCq9iH60e1sT6aH0
0Z3ZZGOF+cH+YNCwaBgSLOn9nH81/R/QL7wf7v9Mmwu+n0dy/Crl7/aKzw7v
hsVvkj7nGymdfOOx4rvPlPI/xwsPh5E/2fSRldPnbr2aK+akublV+159U76t
09t+dnP73n0/t6a8bMqPDiseRLzJN8aK7/rNfvlj+GX+nfo1e8UtoRv8o196
hL33jbbG8xnA69fN9f8YFCZlPbNGWiu/zX5u68lKw/Jb8F98FGaR8vdSv+5I
YWaws9vbfH2x2V/u6/6/a2v+dBPFtzTes7qFWd/b1jNrBVwYPmwPsZfQR/6Y
uiVT93Db39k31iBr0WmD4oPi2z6Q8lPjFR+xc+Sfpn6psRrrFDmWHCv+D74S
3tKyw7LH2GswH747fElYHkwPH/mvveIP62+mhl3CjnEqd2v6D3uOzw9WeVKz
l/jMFm/fD//Ln+2jg8IwYBnisq4aFocPFw8+A6fB+cH9EXuFD4kTiBuI43hO
wx/Y7ziYB6fNV9Lfkin/PeV5JytGSqwUGf8H5w33jc+f75+Nz9a/i66T+pfS
/t+pv3ui4uHEQOFo43Afn3MvDyo2DkcRVxG+eMlIxUNNlfZf7hdX6LSJiidc
reE5+ptzsmIexT7+KPJ8k9WnuDSxcu6F30SXplOLleDDpzeLNePbX79ffCQx
HOIjLhwUZwlX6fVBxW/hOMJxYEHw58Fo4d+zTNY5eA3OubbiQPSlT1wnHCpc
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
OX656eu4GfgUf0/drr3Sw+mYdM3Vmv7H5yw2iX+M/47Pgu+CP48viE+I7xHH
gd8BDwz3QZlPAF/BOT4iviI+EL6Qr7AROsXJWq/px3wdfB58m3zCfMM4FHu1
sbEVHu/UGNkcbI+nm70hhkvMplhNsV3sB9yvpdjfzX64cqLyqTzTL/8VW4PN
IXZEDPW7ExVjLbb6Y7lmzU7FmIg1ubBfeMAqnYqNxknBTRF/KtfQNMPileCX
bG8/yrmdOxXjN0uvYrzEZq1qjRsU32CFTsUYijU0R8VQip00d+VIkisJBwYX
Rk4155TlWpNjSQ6lhdp8F/8l19dbE4VfXNzGaGxibXF2cHfE3Iq1EwMmLlZM
mdiwZYaVU+nitPlT2v67Xz5Nvsx9e8UZwAu4ob0vPk2cMlwyvk58pflHKmZF
7Ap7UZ6dU3oVW4P/Ib6F/oorwGa2Vlozh/3ygfOF45zgqoiBwSvALxAbI2fO
b5uPia+LDcWWmi7XH9mrmHNt1IlFP7ZX8WY4fbh9OHS4dC+lj8f69Zvg5riG
fuvSg4o5EGvwVq9saLY0DicuJ3tb7P7NMJ5BcQD4vvjA+G5vzbnnYa1p8/Sw
4nrE9+AQOodDiEuIX/i/YcVn8EXySYoPcOAo4Cao+0Gv+Il4is8PK/4GV9G5
B8eL84eLwIfHl+fA0cDNUIe/KJ5DXIfx/Dn3/2C08qU9OywfqHieuUbKN8qH
hwuBE8G3h2NlbbBG8OfiSOBO4FDgTvBxWSutmfyT4v3Ed+ELiCcT/yJ+5ohO
xVOKpxFfc2yn4vfE24jHEW8mPu3r/cpvJc/VP9LfVYOKOz2yU7mZ8JtwUcX1
iSd3D3Fq4nrcW3yZeD78BnwFMXNi5+Qq+Oew4v3E8+En4D+I7xMfeHan+Api
zMWa78dGH5aPkq+dz53vkk+aL/fJTvmq2dxsb9wg/nCcL9yv3+Z+/xlWDDeO
GT1W/kj592akq5krbPe0X3W0fER8RXI+4p3Zv+xjb+bcJ1v7W4aVs07uP/Ht
4tXFV4u3ps+JV5cTULz1HJ2Kf3dP96Y7/6uNAbcXx9fYvtav/I1TjVc+QP3L
jScmWGzwU+1+8jU+aV0Y1BiNbedBcYT1JyZYbPAj7Xrx9LjE4oPEPx3WqfhY
HLyH234KbxEDiSOEZ7FqO/ArcGrUiVnCecB1WL4duAGPdqoOhwgXCScGN8ac
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
ySBYww==
            "]], Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwl1HtM1WUcBvDXw1FP1ILkn2qryWazyczmumi2TCtNMxqOxOw6mW65hTUF
zG5grCIpuqwmmjoBQRAvrbLaUgjwwshLcmLiyspsLGxz5T+1lvV5d/549n6/
z/d5nvf9/c75vflLVy4sS4QQ7oExMDUVwijEf6NCOJQVwnfI9uwQTuCP4Cut
ay4LYVUyhLvwleoydevoEBrNr6cvwH9Ad56/1HzS5SHUmN+L+xa+oRu01zao
5L2bfgJczXvA/PaxIdSaTbeehWZn6YBuGbtjvswZ+C1yNsMyGcuhIp5LTjPN
8/Z+i6cOTtFWy81Tj4O/adfRpOgnm621103WL/S5+PEy+tTF6sO0A+bHoJpm
q5zfnGMc/ipcLjyJK4e31XXQYX4z7zHcATkT1bfKXKVewneL+mFZPc5+nGa6
vh5fZT4FX6LeLqPO/E0owJ2jWySn3+y0PdKwFreP9yf8I7zz9P94vhusQ/H8
3kGZfjL8wBf8DiVm+TLHQ4M9RniX0n4vp5amk6wL9psfpd0Cv9LlmOXgr4DH
ce/DsPwR2GBeBXfiWuXMVx+3Z4U1Lf+B+J7NkjJTMRc/iC/Ez8G/pj8BQ7JO
w3u4C2Y/0nwa/xv6v+TdZz0LfyYyz15Ns9G5imnegK/ot/L30vZAoOmmmYZv
oPsI9SEs8j5nma2z516+EppBvndwn+iX4y/yX2ufNH6x+X6YIKfNrEVGK8yR
M4Y+W/Y1+uusF8xb5cwze1U/zfygfo+subiU+pTsvPgOzXplzoz/EX2nvbqg
X8aKmIPPo0nSvMS/xB6Pxn3k5NK30+6EPtoSaKJP4wdof6Ebgd3O8KCMSzx9
9h1tXqfvkjmD/mfYo345frPqhJxX1H/EGb5WH+Q9Z/0Sv4//dX0ZugKK5afx
C+h7nKXAvFFdRN+G/1xdRV9KuwIK4/eE30xXlMh8O0/TZOEvWXPi/5z3COyQ
1wbrcdt5yiNH06IecLb56pWe67zciZ4tSfsUfpl5jdnHMs9AAp8FL8qph171
Q+Y76RbKHIv7DK7kbdavllceMt9dEX6KcxZaL/IMxzuKb1j/Lz7fvudo2+3z
GP4JnqF4J8Tvm/4O+ln4MzBV3c1z2PzdkLmv1uA78DXO1CBrU8zjvR+qZLbH
O4/nRprbsjPv9ihNPzTxfI2vx6+HTnUj7hDPAthGexBm43fJ2mvPXVAqe3Uq
8413JjL3VWkyc99Owj8b73J5v/Oe5G1Sv6CupmmBkzwz8XPxz9Bv0G+EFr7Z
ycz/83+s29lD
            "]], 
           Polygon3DBox[{{2797, 1249, 302, 1943, 2798, 1634, 2508}}]}],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{573, 575, 1495, 1496, 580, 1503, 586, 1507, 590, 1511, 595,
          1513, 2207, 593, 2205, 592, 1509, 2206, 588, 2203, 1505, 584, 582, 
         2479, 1500, 1499, 578, 2200, 573}], 
        Line3DBox[{576, 574, 2201, 2202, 577, 579, 1501, 2480, 1502, 583, 585,
          2204, 1506, 589, 1510, 594, 2209, 1514, 597, 2208, 598, 1516, 600, 
         2211, 2210, 599, 1515, 596, 1512, 591, 1508, 587, 1504, 581, 1498, 
         1497, 576}], 
        Line3DBox[{601, 602, 1517, 1518, 606, 1521, 609, 1523, 611, 1525, 614,
          1527, 1528, 617, 1531, 621, 624, 2222, 623, 1532, 2481, 622, 2221, 
         619, 618, 1529, 2219, 620, 1530, 2220, 616, 2218, 615, 1526, 613, 
         1524, 612, 2217, 610, 1522, 608, 2216, 1520, 607, 2215, 1519, 605, 
         604, 2214, 603, 2213, 2212, 601}], 
        Line3DBox[{625, 626, 1533, 1534, 630, 1537, 634, 1539, 636, 1541, 639,
          1543, 1544, 641, 1547, 645, 1549, 648, 1551, 651, 2488, 1552, 2231, 
         652, 650, 2229, 1550, 649, 2230, 647, 1548, 646, 2227, 2228, 643, 
         642, 1545, 2226, 644, 1546, 2487, 640, 1542, 638, 2486, 1540, 637, 
         635, 1538, 2485, 633, 632, 1536, 2484, 2483, 631, 2482, 1535, 629, 
         628, 2225, 627, 2224, 2223, 625}], Line3DBox[CompressedData["
1:eJwl0ElSwmAYBuFPFxYucUKcUVGuI0fwAHoS5wHEWQEVx6UCKgrcyyfl4q3u
v5NKUsmtbxY3BiJizbYGI7YtPRQxYvt8HI8xgyeYxTOcxhm75PN4izms4xI+
YB5X7Jm/WT8V8Yqr2tdwxAsv8J7+yBv2qS9rT7yr3+MPLmp3/JfXsGoLWsf5
ml/ZN5/V2p5x4zzHL/DcpnhLP+WTyfvdW+Flm3BuulbiR8k3uDamHfI2b9kB
/3DPqL7Hd62p7yQd31P//+8PTk4r2A==
         "]], Line3DBox[CompressedData["
1:eJwl0EdSAlEYReFfBxYuw6FZMQdUkBU4d+ICdG3mLEoOkkFcjl+Xg1vn3Pte
V1f33MXV2eVURJzL9XTEjczPRCzIA1/GF1zFD1zHL9zATSnzHaziHjbxANuY
wSPp8yyO8BQnOE5F5JPnZiN+9R/J6RV9zEfOh3hsG2DZfsK7fOCsg0M8tPX4
t/T1Fpbc3bfXec9Ww129aG/wimwn36FvYUnvulfEtP6JHX2NF/i7tPWV5Mwz
b8n79Fd8lhZfcvbEm7whj7zg7qL9nt9J3X6LNaym/v/3HxicPBo=
         "]], 
        Line3DBox[CompressedData["
1:eJwl0cdSAlEARNEHKIWf4ceYM2bM7NzoZxrXKiKSszlnPVMuuu7tfhOqZvqz
u+mdWAhhW3LxEM5lIBnCoFzyEazgGDZxAjs4hdNyzWfxDufxCRfxFZcxI598
DX9wA2OJELawFzupELL8uC+EpN7VExiXNt901sODtPR1/ci1v571LU3biu2L
H9pX+Tt/k7qzhizZPvQXqerPuGCr8QdewXucsx14xiO/lbR+g/u2GX7FuzLJ
y+5p8xKO6y3ekKJex9Ho+/GC1PQLrGJZ8nzYeSn63jwnRb7nPUP2QnS9nNnz
eIonqf//8wfuLErL
         "]], Line3DBox[CompressedData["
1:eJwl0UsrRHEcxvG/iBkTQoNJkiQlkQUW2LgssDJsXHIZStKYJLEgRVHYoNze
E2UjvAZKsRDCZ7J4+n6f59epczp1qUxyJSeEkJaC3BCiMp8fwoKU8mVMYAbr
cQ2bcQM3pY3vYCfuYQ8e4AAe4bEM8zMcxTF5jIZwoU/xK3zSZ3klzmEVXttT
PMFnMI6XtmlewSdwXM5tD/okL8Mkntju+Qg/5UNYpA9iMR7aenkh78MY7tv6
ebdE9F29i3dIu2zrW9LK89xbcF1vwjt9lTfy30gIP9LA6+Sb12La/Yt/So3+
gdXZb5Zbzy+5x/m7/U3K+Y190V6SfX95tcfwBZ8j///rD4jILtY=
         "]], 
        Line3DBox[CompressedData["
1:eJwl0UsrhHEYhvFnTMaMJgaTJAlJJCUssHDYYOGUctjYqJGkIUmhRFEsHBZ8
LnLItyAKWSi/sri6rvv5v7u3eWVzrpiIiALKkxFpvKYj3pDV71zBOaylIj7s
vP7kL9TqdfdvXacb8KMb+S4TcY+i9yb7172F2xDuCbTrbe8lukMnuZN33br5
kFNuvfpAl+o+PYAHfexWxoP2KE7tjD2sR5DV526PPG5PoFJfu83qZ32lp/UM
quwcbt0W7SXk7WWu4QWex4u+8c2UvuQne1Jf6DE+4yE+4X4+4h7e5z106R1u
5S2u5w2u5lUupP7/xx8ZDih1
         "]], Line3DBox[CompressedData["
1:eJwl0EVOA1AURuFLSEi6Bby4L6ZzJkBxWrQ4FJct4FCcYtspuhO+hMHJOf99
s5fsy6YyZRHRi/7yiAEcVUQcY1if8Thf8BRfcY6v+QZL+p5X+ZHzvIGi/klE
7OgX/av3dRe/2gf6jbvtQ93D7/au7tB7/Gx36i29iW/95Lat2/UaP9itel23
8Qrfui3zl32nW3jBnsenLrgt6jnM4sPt0m1GN+smTOtJNOosn3tv0Elk7Hqe
4DHU6VPvo7pW12BEl/jEfUgPotpOcxVXJv7/+w9kzy+h
         "]], 
        Line3DBox[CompressedData["
1:eJwl0FsyAmAYh/HXmDHTMqzA+RRiB2YswQKyEOWUY06FKLlD5JxkISLb6Dfj
4pnn+b/f3de/tLyY7omIBaz0RmRw0xdxi3V9z1tc531+4kN+4VcU9BkaeiYR
ca6b+leXdQXzuuV2rb/4z77SVXT0p9scX9glfNiz9qVOcZHf3E75x37X03xs
H6Gtn91OdFIf8BTn+dF9jyftXX6wJ/Q4duwx3uYcRnXN+6Ye0cPY0N98576m
VzFkZ3mQBxL//9YFCKYw6g==
         "]], 
        Line3DBox[{941, 942, 1735, 1736, 946, 1739, 950, 1741, 955, 1743, 958,
          962, 1745, 2540, 1746, 963, 2380, 966, 1749, 2381, 967, 1750, 2382, 
         968, 2383, 964, 1747, 2378, 965, 2379, 1748, 959, 960, 2539, 1744, 
         961, 2377, 956, 2538, 1742, 957, 954, 953, 2537, 1740, 2376, 952, 
         2375, 951, 949, 2374, 1738, 948, 2373, 2372, 947, 2536, 1737, 945, 
         944, 2371, 943, 2370, 2369, 941}], 
        Line3DBox[{969, 970, 1751, 1752, 974, 1755, 978, 1757, 981, 2391, 982,
          1759, 2543, 985, 986, 1761, 2545, 990, 2394, 1762, 987, 988, 2393, 
         1760, 2544, 989, 983, 2542, 1758, 984, 2392, 980, 2390, 979, 1756, 
         977, 2389, 1754, 976, 2388, 2387, 975, 2541, 1753, 973, 972, 2386, 
         971, 2385, 2384, 969}], 
        Line3DBox[{991, 992, 1763, 1764, 996, 1000, 2547, 1767, 1001, 2400, 
         1769, 1004, 2401, 1005, 2402, 1770, 1006, 2403, 1003, 1768, 2548, 
         1002, 999, 1766, 998, 2399, 2398, 997, 2546, 1765, 995, 994, 2397, 
         993, 2396, 2395, 991}], 
        Line3DBox[{2404, 1008, 1771, 1772, 2549, 1011, 1012, 2406, 1014, 2407,
          1013, 1774, 2550, 1773, 1010, 1009, 2405, 1007, 2404}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{1015, 1017, 1495, 1497, 1028, 1517, 1051, 1533, 1080, 1553,
          1115, 1577, 1156, 1605, 1205, 1635, 1637, 1253, 1691, 1296, 1715, 
         1338, 1735, 1374, 1751, 1402, 1763, 1420, 1422, 2756, 1771, 2859, 
         1493, 2861, 1435, 1773, 1424, 1765, 1404, 1753, 1376, 1737, 1340, 
         1717, 1298, 1693, 1255, 1640, 1639, 1207, 1607, 1158, 1579, 1117, 
         1555, 1082, 1535, 1054, 1519, 1053, 2565, 1033, 1501, 1030, 2555, 
         1499, 2758, 1019, 1015}], Line3DBox[CompressedData["
1:eJwl0E0rhFEYBuBbzDBj42s5JVtN9hq2slPWIpMUC36ALGUlYTv5FZoUlkrz
AzRJVposNNmRhlyTxd11P8/7djqdmfr+6t5AkhX5Gky+pV1InqQwlHRZ4S/n
OVFM1jjLIy6xyS1uS0dvcNz/V6zxgRts84CvPOFNOTnlu7k6mjzqc2zw3reu
/Zl+LrfmO7nQO/aH/Ttyky0usslJXvLNPXa5I9f6Mo9Z5TqnuMCaRB9z9rTe
4kf/DCnqZbsReTH/lJJhvcdnc89bfZb+3+0Pvo8ujA==
         "]], 
        Line3DBox[CompressedData["
1:eJwl0LsuBHEcBeDfuiVrKYjVaMxKqHgDs1pb6rbCKrHewKWjX5dGeAJKl8Kl
IlnxAjZZNC4dFYXLJ4qT75z/zCQzk1SWpqqZiCjLV2vEtzTbI+4l1xbxxkFm
OiLGmec0R7nOSZ5wngvyou+xz3NHTFlnhXdc5ooM5yKe7LPOiJp9zk3uyrZc
2Fsccd+z+y7tHXtVDvSGs1s9cX2Nh87meON8wFlRP9bz3Oer96pyUU71EjfY
8NyYPqsP6TPstwv6hF6UFrvXTvUeFvj+9116onfLo31td+lXfLBD//E/P7MR
H9n///sLpsgxTA==
         "]], Line3DBox[CompressedData["
1:eJwl0Tkvw3Ecx/FvKUlJXE3UYBGVYOEhaFcmD6F1bIqH4FjwBAyIDiaDY3It
EoPElRBbLY7EsTEZ8GoMn7zfn8+/v/+RdhVKo1OJiChKIhlRI491EU/SxD+x
G2vrI3KYwQIO4BIO4xGWcFre+Sa2O3eAQ3iJY1jBa9xpiJjDU3y13fLexog7
7MM32yrv5wu463fzuIcPri3yfT6B47LG1+XKtUm907kcHupn2KanJc8zUrZ/
eM9ZnJETfiwv7vEsI7YVfVkq+qC+7VxRz+od+j1u2fK2NE/ayvoN77F98Y3q
t+sXkrW1Vp9hO9db+G/K8/Rm/sNr8Tv1/z/8AZ8jNs0=
         "]], 
        Line3DBox[CompressedData["
1:eJwl0Tsvg2EYxvG7oq3D5hTthihGNrPWxuAjiIpTGIqPQEmwWxA+gsNAkBgN
2i+ArSWhE7NfY7jy/1/3/T7v8ybvwPzG3HoiIorS1RpRS0bUpZv/YA6TqYgp
zOACjuMBzuA9lnBTvvg59jt32zyDL7iEy3LZEfGmD3ZGVPQdeTI7xl254lUc
sn/33LVe1m9wBZ/lhFfsVvkpP5M1XpAyv7PL8z2+L9M8KyV+YZfhae9v+NZt
vWH+zbf4I9b1B5zVa/yIT+IhTpi98kVelKye04eb9+gFSZlV9TzvwTH8deco
tuttMsLT2Iefdr3YovdgAkM+kv//4w9fJDJf
         "]], Line3DBox[CompressedData["
1:eJwl0M0qRAEYxvFXBjlkJV9TphFFUxJZuQClYZq5AzZKBgtGSvbykSQXoKZc
gpQispIy7MWWhYVSVn6TxdP//z7POc10sgurpZWGiJiX7lTER1NED/5gDlua
I6YxjYs4gUdYwBvcxC354lVMe++q/g6W5YmfJRFr/AJ38U032BZR40P47t7j
l/YNrOIDZmwvtgo/1+XxXvb5tb7TPus+cBfwELP1Z22ttgxf1w1gBb/9xx3b
ttzxku4Wi1jUnfITmXJPul/x2F2WHO/XLfMRPixLfE6eeWLL8xqfwS4cxw78
9ftj/JGPYjv24ae+F1PuxuT/+/8BuUQujA==
         "]], Line3DBox[CompressedData["
1:eJwl0E0rRHEYhvFHoXFOluOl5kys1ERSshB7YxppLO2svNSZvJXIF2AlyQcw
zdnb2VDKF2DhM1hiw85vsri7rvv/PE+dzuRWu5X3RcSm1PojfgYiprE0GLGC
FdzGebzCdXzGEzyVT97FirvH3g3mkqURr/pdEtHW9+WBX+ChdPgBdvHNXtX+
kV7oq1iXS/5k1uBl8xFZ41Up8cIs4wlPZYIfu/n2TWdmX7irn/MXvsFb/N7e
B7/1diPLfEkWzK71RZ5jYe+dZ95ruOdtCnewKeN8qPd9fIyPSp2XcQ5/3c/i
sD6DKSbJ/3/+A4J6J+A=
         "]], Line3DBox[CompressedData["
1:eJwl0DsvQ2EYB/BHgqE9YtSoRMVlchkQpvoIqq3JZpWoy1CbyxfAhkliasXk
EzAog3RiNpsY3FKDX2N48vuf55/3PTlnaLVSXO+IiBUz3RnR6oqYYbo7YpGD
rHCOJyzxjrvcMx9yjcPOFcyNfJiKWJJrrPLJri4/ys9yLh2xI1/aFdnnucFb
XUYuyUe6Mo85yrou0Y3IPRxjVffl/fu6NflTfuM333lg/yM/mHuzbHft3Gv7
bl3DriyfcYFXuhfO607t8vI2p7jFSeZ0m/KEvMHx9rdygBfOJ/qsXLDr5yzP
7ZvyL3tT///5D0mJLwE=
         "]], Line3DBox[CompressedData["
1:eJwl0L0ugwEYhuFXgqENeyVILX4mDISJnoHSH6sZXbRVRuoA6FYkkg6S1glY
GdTP1hNwCsbq4GoMd+7ned6v/ZIvfVDKHo9ExA7WRyMexiLWeGI8IstpPuEN
bnKO3/mCL9GX2zzvdzlcJyJe9FQy4k3Po2Or8RMXuIsb+dVzU54r6g19nxdx
KnfcFuSafIYl+ZwH3ld3++VD/QjPbj98Zf+yF+VPLnB+iP1Dv0dGv+Nt3rR/
862+xVWuYFV+9J9z7ivyMsr2PfTkltuk26y8a5vh6cT/9/sDTnso+Q==
         "]], 
        Line3DBox[{1109, 1551, 1110, 1571, 1144, 1595, 1183, 1623, 1230, 1671,
          1672, 1277, 1323, 1709, 2830, 1324, 2709, 1370, 2710, 1733, 1482, 
         1734, 2711, 1371, 2712, 2713, 1325, 1474, 1710, 2831, 1326, 2684, 
         1327, 2685, 1279, 1673, 2803, 1278, 2804, 1467, 2805, 1674, 1232, 
         2651, 1231, 2650, 1460, 1624, 2649, 1186, 2629, 1185, 2628, 1454, 
         1596, 2627, 1184, 1146, 2778, 2777, 1449, 1572, 2776, 1145, 2611, 
         1111, 1445, 2592, 1552, 2773, 1109}], 
        Line3DBox[{1112, 1113, 1573, 1148, 1597, 1187, 1625, 1233, 1675, 1677,
          1281, 1328, 2686, 1711, 1330, 2714, 1372, 2715, 1373, 2716, 1332, 
         1476, 2833, 1714, 2689, 1333, 2692, 1335, 1287, 1680, 2807, 1285, 
         2809, 2810, 1468, 1682, 2812, 1239, 2657, 1237, 2655, 2654, 1235, 
         1628, 2795, 1195, 1193, 2635, 1191, 2632, 1600, 2786, 1190, 1153, 
         2615, 1151, 2614, 1576, 1150, 2612, 1114, 2593, 1112}], 
        Line3DBox[{1147, 1574, 1149, 1598, 1188, 1626, 1234, 1676, 1280, 2806,
          1678, 1282, 2687, 1329, 2688, 1712, 1475, 1713, 2832, 1331, 2690, 
         2691, 1334, 1284, 1679, 2670, 1283, 2808, 1286, 2811, 1681, 1238, 
         2656, 1236, 2653, 1461, 1627, 2652, 1194, 1192, 2634, 2633, 1455, 
         1599, 2631, 1189, 2630, 1152, 1450, 2779, 1575, 2613, 1147}], 
        Line3DBox[{2616, 1451, 1154, 1601, 1196, 1629, 1240, 1683, 1469, 2671,
          1684, 1288, 2693, 1336, 2694, 1337, 2695, 1289, 1470, 1685, 2813, 
         2814, 1290, 2815, 1471, 1686, 2672, 1243, 2660, 1242, 2659, 1462, 
         2796, 1630, 2658, 1241, 1198, 2637, 1456, 2787, 1602, 1197, 2636, 
         1155, 2616}], 
        Line3DBox[{1199, 1603, 1200, 1631, 1244, 1245, 2816, 1687, 2673, 1291,
          2674, 1292, 2817, 1293, 2818, 2819, 1688, 1294, 1248, 1247, 2663, 
         2662, 1463, 1632, 2661, 1246, 1201, 2639, 1457, 2788, 1604, 2638, 
         1199}], Line3DBox[{1202, 1203, 1633, 1464, 2798, 1634, 1204, 2640, 
         1202}], Line3DBox[{2664, 1465, 2797, 1249, 1689, 2820, 1472, 2821, 
         1473, 2822, 1690, 1295, 1252, 1251, 2665, 1250, 2664}]}, 
       {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0T8ohHEcx/Ef6nDyZ0GpGy5SUliUMLBS12WhKKWE4VyyysSslJwM6jIK
g+Fk5QazUzaTQdcRQjJ4PRk+vT/f9/PteX7P8yQXslOrVSGEjCzXh/AlL7EQ
vvEVf3BF5utCOJIQD+GXr8F8NNdSegs24yJ3Kq3mhLkHS1hwjz49qa/rgxHt
3ciQvsEtuZ7SS1xGT+vb/LO5ou9zOQkNITzwW3yWv+Q+8Y7bk039iXvUm+we
YqPdXT6Go+ad6PzYa07YKet5rtPcJRf6GE7z5/qwPiLddt+5lH7Fn+jXOGOe
lNno3TCN7TiOb87Sj7fYET0HK66VZU2/xwks4gAWsA3PsBqP8cM3P8CczEkx
/v+//gDzSTqL
         "]], Line3DBox[CompressedData["
1:eJwl0b8rxHEcx/HPRefHSYlCSsjkR52SnZLkljPKIBlMd/gHTGeUAcPVTZfB
hAnLDQYGynjFpBio6+JCfuZxGV49n+/X9/39fL99v72L6dlUJISQlpdoCB8N
ITxjRX55rj6ETx5pDOEHazGvi9SFEOMteGTvmrfyfunmA3hsr4cP80kZ5QW7
tzhlnpYEX8Zz/T1P8RW5MpfMOX7Da2MhbDhvVZfBoq7gWsb8hOt4p3vkWd5m
Zweb8UHf6f4mHpd9fUK3yfPVd8UTnMSyvs/uFh+XM/2CbpsXeBLn5FU3ZG9Q
ds1L5gTO4xgmsQMnsOKd4niJXZjHsmslWeNFnMELHMFTbMdDrMG96vN8+yy+
4ZczvuVA3qP//+0PW6M/vQ==
         "]], Line3DBox[CompressedData["
1:eJwl0b0rxHEAx/EvOZyHDMhDSopSnrpTrEpdkkvdoAwGj2GgzmowyGIzMFxd
lAxCDAYWA0L5A+zGM9yVQcnDS4Z378/n8/31/V33a5tZTa0UhRBWcR4N4Qsf
pSE8VISQKQ9hCln82D/txfZ9/VuuKoNejTnbKepszXoHt/KlrUvuQ7+e1u8w
II/YEjzL9+5/lZfkcd7U1z2Xw6KetR/gCQ3OIpXukdPOavV7OY8tPccb3G1/
kzNyvXt2eci2LdfgRI9x0nYsx+VRXMkFW7t37OgJ3NomeNreaU/JN7YzfQF7
eq+9B5PyvC359//xIKe4iYf53W+K8TO38CEXnOWxJr/wGD9ynK+5kS+4hI84
whHvX47+f7dfWgg5IA==
         "]], Line3DBox[CompressedData["
1:eJwl0T8ohAEYx/HnFsdJSUhZ3GBQbjKYLVgYUIqSrnShXMkiWZmspC6SK0m3
KMogFo6B6QZls2AwMCgTnzfDt9/3+b3P+z+bL44tpSKigFJ9xE9dRF0amYgj
82JDxCmKuMAKrrCOKjbwgC+7W/IZ23jBPt5QxgeOkz1U8I0b95h2XoFPyGvz
uOxpjMjrJvkwzvRDsls/pe/lZV1Ojpq79H28ojs0N/NXuWNu5yW5Z84lx+x+
eL9N3aesolWf0t8m7y07kmfn83Z25btrzPEiX8AIr+lWMcTX7PfLQccu+RMf
4Mu8xs+T74hOntW3yRZ5onvkTTwtf337A90s7s0z8i7z/1/+AJ+EOTs=
         "]], 
        Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/E3y/1Ql8ugE4MMV9IlDGZZbtAVGQyn7ntSUidlYPUv3KIY
LHTFdhtKYvDzD7j1BkwW3ag8ZHj1fL7e73efb33Hk53lRl9EVKWVjqjJSzYi
wVfMpCLSWNcvJccbmYhh3NLbMsqL7qZkmu+a3UuHH7jd513+wMu44W5bEv5p
1+Sb/BhPpeDuEfsHIm7xx27Q7I5/yaFe0vP2H/oJPzLLe+udN/kQn5MLXjEr
8XPe4ldY1tf4hDcW/u74JK/jql7kFbxxu242z1dwBBex57sz+IZjeIY9u2/Z
4x1cwiecxWssYNttCp+z///7F3jyMFY=
         "]], Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/G3DPf9nrqc8iNXVwY3yCIWyyk/SjdIus1ASkoXk8Umk8nC
cMpIsanLRDkjMRj9DYrhulEe3wyvns/X6/v9fvp+v2Nb+2t7PRGxLkku4iaJ
eMtH5HmKt3qBl2VIH5FdW0sqtkm9ilPYts3zT36YRnzom/qyXpNt3pBX1770
M76DFzho6+2LeOK/tqL+zL/lWD+SE+dN2C+lqQ/oo56Z0xM+zHN4KmVes1+5
r6KPyz3/sS3wO76I59LmHfsqf+QbfJbXsYRL2PUe0/ie/Qu8xq5rHTnIvhlX
8AVn8CF7N2y5t9+ZJV7ERvr/n/8AE2QrvA==
         "]], Line3DBox[CompressedData["
1:eJwl0DEohHEch/GfifduUNJFqYuF0nV1Gd10dcttdJsFZeJYbjVd2UjIcoNF
ymC4kiILo5LIdBML061GPv8MT8/z+3a9ve9Nr20vtYYiYhn54YhRjOciivzK
vZGISZ5xz6Gkd2wPqOiabQU1/WZb1Q29kXb+sh3odX3CXRSyiEf+td1yi99t
d7qjv9N75CPmbZ/6A8f2zLMm7FV7TpdxYW+4i/bZdOsb26Ee6J6u6ite5CNc
2ps4Rx1nWMBpeg728eN3z7yHvt7lJ27zPW9iyntdu8fS97pfeCv7/x//ABjs
Kwg=
         "]], 
        Line3DBox[{1821, 2579, 2486, 2151, 2769, 2152, 2487, 2771, 2417, 2599,
          2159, 2240, 2606, 1855, 1860, 2624, 2257, 1885, 2628, 1890, 2171, 
         2795, 2506, 2653, 1936, 2660, 2444, 2672, 2520, 1980, 2808, 2807, 
         2319, 1974, 1973, 2684, 2019, 2527, 2680, 2020, 2059, 2704, 2366, 
         2050, 2699, 2465, 2728, 2088, 2539, 2719, 2079, 2470, 2739, 2392, 
         2110, 2390, 2849, 2076, 2375, 2039, 2357, 1999, 2336, 1959, 2297, 
         2296, 1910, 2268, 1871, 2252, 1845, 2490, 2594, 2157, 1821}], 
        Line3DBox[{2416, 1824, 1827, 2600, 2602, 2239, 1852, 2607, 2424, 2167,
          2785, 2499, 1887, 2629, 2435, 2277, 1931, 2654, 2656, 1938, 1942, 
         2322, 1981, 2811, 2809, 1975, 2515, 2452, 2685, 2021, 2681, 2345, 
         2014, 2458, 2705, 2051, 2837, 2532, 2700, 2053, 2089, 2720, 2377, 
         2080, 2717, 2081, 2111, 2735, 2077, 2376, 2040, 2358, 2000, 2337, 
         1960, 2511, 2298, 1911, 2269, 1872, 2496, 1846, 2595, 1847, 2238, 
         2774, 2158, 2597, 2416}], 
        Line3DBox[{1849, 2596, 1848, 2491, 2598, 1850, 2601, 2492, 2775, 1853,
          1856, 2622, 2256, 1881, 2625, 1886, 1926, 2649, 2278, 1932, 2655, 
         1937, 2518, 2810, 1976, 2803, 2316, 1970, 1969, 2682, 2184, 2828, 
         2343, 2015, 2052, 2838, 2836, 2363, 2046, 2045, 2721, 2189, 2538, 
         2718, 2078, 2537, 2843, 2041, 2359, 2001, 2338, 1961, 2512, 2299, 
         1912, 2270, 1873, 2780, 2253, 2164, 1849}], 
        Line3DBox[{2422, 1851, 2603, 2423, 2618, 1878, 2498, 2784, 1882, 2626,
          2434, 2275, 1927, 2650, 1933, 2657, 2443, 2812, 2179, 2317, 2804, 
         1971, 2313, 2451, 2683, 2016, 2829, 2344, 2011, 2824, 2010, 2701, 
         2047, 2531, 2696, 2048, 2082, 2844, 2188, 2042, 2360, 2002, 2339, 
         1962, 2301, 2300, 1913, 2271, 1874, 1875, 2781, 2254, 2165, 2782, 
         2422}], Line3DBox[{2431, 1876, 2617, 2255, 2166, 2783, 2497, 2620, 
         1879, 2623, 2433, 2170, 2276, 2646, 1928, 2651, 2442, 2318, 2805, 
         1972, 2668, 2175, 2311, 2450, 2679, 2012, 2826, 2526, 2457, 2702, 
         2049, 2697, 2362, 2043, 2361, 2834, 2003, 2340, 1963, 2304, 2302, 
         1914, 2789, 2272, 2431}], 
        Line3DBox[{2432, 1877, 2619, 2621, 1880, 1883, 2644, 2274, 1923, 2647,
          1929, 1934, 2178, 2314, 2669, 2176, 2667, 2514, 1967, 2013, 2827, 
         2825, 2342, 2006, 2005, 2698, 2186, 2835, 2004, 2341, 1964, 2305, 
         2303, 1915, 2790, 1916, 2273, 2791, 2432}], 
        Line3DBox[{2440, 1917, 2792, 1918, 2641, 2504, 2793, 1921, 2505, 2794,
          1924, 2648, 2441, 2315, 2802, 1968, 2800, 2174, 2309, 2448, 2677, 
         2676, 2007, 2525, 2675, 2008, 2044, 2456, 2524, 2447, 2306, 2513, 
         2440}], Line3DBox[{1919, 1920, 2642, 2643, 1922, 2645, 1925, 1930, 
         2177, 2312, 2801, 1966, 2666, 2310, 2449, 2678, 2009, 2823, 2183, 
         1965, 2307, 2173, 2799, 2308, 1919}]}}},
     VertexNormals->CompressedData["
1:eJzMvHk41d/XP2yolJAipCLJEKUkomShqIhEhYRkKkRJopIiJUmpTCUkFZmn
KMMmZJ4dw8FxzjGfwyFDg0rPdjuf7/17Pvfj+tzf+/n9rufpn9O1rnWtvfZ+
r/Vaw16b2BkXQ1s2FhYWueUsLOz4l//cwA3LcwNol0rMB4/WAaTE43yuY/c9
CP1sfemo+wj6lCzrNd7bhWS7dyhaGWTAlulURX8+MuLdvSzO92EH2lVF4dsf
MIQOPnihaRbejwYPWu+hv+hBdx9uDRgKoMDZP4cLlrQzUEW2e2Wwfi1656QB
iU7FqHpE71zJ5lZk1drwppsQj15mqRkRZkaRlpa2y03xIdT96GJoty4BJU3F
Do2tpcL6b9Z9egQGyrsRL2E2WAnBF9Jzi+0/I9+DNPfl5W2oT27Y/ygpHcoN
hH+JxIyi46P5jwRowyh5suzy1L4mtNtW9NsfOzKIjGxbKlc0gnL0u3hzOcpg
rcaPkU4eIsj1LpvktR1BJppNMkkZmeAeJDi+ek036Nf3GP0OGkF++x+6yPR0
gei7k7MOHC6QR+AK+UHuRWl2QktsH7SAIcH0a2PPANossWvrM34aEjy8SXjN
i27gfeGVb2vYCmwXVU7wS9AQQNYBSzESlKcm2ZnrE6Ao8Hv+uBYduSqlRLBE
k6HrumP487hUdOqSZSnnxzeI69yu6uboFvRJKefoJU0GOn3hFYP/ei3ieETM
C2ZjIMOuW5SJqAZk3aBSJmbZim63eQ58MKchxVdGR+/f7wKvG30xwvz9KEb7
eBpjlIwkzZFsmggFEgi7bDtDqChGICS9eWcvumjgIb05ggIs/4//xlH6DSeb
z4UDqKBeTrl2oAN1S0zY/D5LhfPX61tOkfrRqPcrNV/JLkSGwzZ7XlPhvv7Q
Iom8AaQcZTPi1NeB7N8vtdd3poKetPFPYczfm11cIYP5U8ausL7D/AutW0UQ
vyDgTkOrzCpFzX/FoNJtb78HfaUAPy0t7/5qGrIMvPVj11AR8nrFM+zMRYX6
vN5DfecQer0s06dr+Qdo+RzSeP3ZGHouW5a1nY+GXqNtd6/EdMOVF202d461
QnQz5VGaGg3J0qcsz0kSYerk56PVLzvg/VavI/aidPQg7I3RY/cW4Ow5dXhG
uBO2UR19Kq/RUEn1U4tHOmTYduT+9SyNOvTack1ch2UbOl3sL7GjvgGqZOr1
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
s2iGpur4u2Ss41ukhu2tZkLDA2E68eDxyBEcB19cEqs3xfXUwMqbrnWMTLC0
Ddx6rrYH9vif+DU87g6KzF8VHwulQlzXk8UuSoTjOoU+a3kUsN3+sNVd7HiE
ALH6Mw6Xsfxu+bXmDpj+JkLcD83F0/v1XEPlMRB9IONoqnUIXJMpvFn/Ywxx
ye2/Pff3Og6dueUmgfmfGr8O8pp7DxIiYu+K6cPe949VSpNAKdfhazqm9z25
EHEe0y8rSgf6Y/4pyJDMm3v/mx+6lq84H7K0ZJfPFGTBVhN2Vp70MdQTueHt
nJ+u1109OID5KXHdsvfxOZRsV/p9BdMHw2yJQTjf1rfx0i3A57D9h4zA5j9l
4GOzQ2xIqRZaU5ZcCHzHQE9T9GTPYX6PBlvJuXeILYKnVztj/mbOO+vmzlM6
/XK0BD7P66sefijD+tRwOzx8M94MigmyZ/beJ8O2wCXH1X2HUfOVp05jwjTk
KnkpjriPDNxD9792xzdCimySSiAnDbXL3PPJqiHDVbVezS1D9XC+6f2oHJZ/
kaISNTeP8bLy3de5ub7Fy68cnfpWDQynPdcoi4ah4FLZy/upVPTArP77a2Ei
CvrSaHh7xygcqH8grL/n5T/iyUJ14kJ5wkLzAAvl5wvN5S6UV/zTvO7f8erf
neNdiL4Qvv27c7//Lh7+u3PCC9EXes/yT3PFf58T+/u88amdqpE3VxkgJ207
uXEpBtqx9fFri3MEMK/51vA09GfhcoEjTYcw/wmia/Y1vF/NLeFNCckv0PCP
MU279aPoz1tag9gNIlB0wqdcPQ+hh1tEfAMkGIhaUKfR7f7v71ckY7mh0tFP
KMxm1DiTewTtVbLeYWbbDT9W68qbX3ZBrorHlmaLMdCasfWzbIEEyGkn3ad4
N6N2VqNY5TQasjhfNhh4oRv6oxdPbhd9hl5cbCrj8R5FZ+N4OAxK2mE3+6kK
PfYE1MmmYtB9ZhT9jnreNyDeAW5sWYdrfpLRpNUZm36rPvTZhr1ep48Cz5vG
W62GIqHUXvny74EBdGhGqDzr2MJzzgvRM18bXbo3QEXqZwffaPeTkajw/pHx
O72gacke9YStHXE5tnNE1DUhv0ie7N9iI3ABmejG7u0CHZXntJy8dKiJpb+0
frnwvPRC9LvoU8Lyo0MQp+ccXSrQAb+Vq/QGcXyZVGtSd/g2DN90kl0ycH0h
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
mZgNv8T3+1RJie6SWSuwe8fYFLaMIU6dW04XM3vBMtuMx1WvHTbqiUeUY77l
J2lcn8d8RVTPGbqM9dX9P9+SqH1mLk5dK+nCONBW7kPJGLXuqCWlzYyLjBJe
T9yRlSNAWZ4/iwnmqwlN1E7G9yW6oViYRwL7fdpVjub43htzjV8wYn6+mu33
LRvzM83pvrBu3VbgPhe9Twrzg0ONZv9b6vueaz8FP8f8kMTKICGD1+1slr1L
/R5cV6GV9ySmT0xmX36An8vk9Pe15ZjPpdln48n4HndsjPj4Fo+PPjl6UAzv
v29KLJ8by92uz5xWcIyMbr/ZU/HgKAEKeFi81X1bIGE0eFESrysqs8VRAvNh
blZtBwE/Vxnd/kfU9+jXbet6Z439mul3OziOnv7/8lv1Cvx2fgV+e7rMb/+i
v5y0daX2s1WU29BS/1/mTyvvSTuJ6VHHI6/Z4f2Pe6iUk86HIubD1Xw/10wi
rkmXrhDBNkij3/ADJaQhNY4sttN+E+i90eCbtYc6QKjIj9eXuwgNv20+rHFs
AsUQKk7dPtYBgpYfAhi9GlF8wCWjjdg/j+2mGIkM9sKH/V7WHAe7kILfVS8r
zI8nZNuP+QQToWhSytZy4zByp6mrfGTcg5LhpNGOU/2wTrSXzm1xDGmz35n3
c65Gf0i/yXcMSUCSKVYNzSIjmaBYhohbHWD0Q52vw6ATzAzZI5JcKeg58dun
JL4W6Ny/gfLySyfkO34/2kw7jto6k7x2p9eBJa3gavm2LkiZ9EhOxfc7n8k3
IoD9PrLxvKIWtf6QjjQei++Lu+QGjz3mB+YXbFuTtFrhSY8GrxGmf73LxE39
DrtPokKuJD5Pcic30xi+x7WbZFvcMJ0gG9r4Bc8TDaqZhzE98f/h7c3Dqf66
/vEGVJQhMmVIMoUyqwyLJlGKNEmlAUXKUEIDzYooU1GRWWgwJFPsyJTMHLMz
4TjOMSuF4rfPx7m/z/f63Nd93ffzfJ/r9+dZ17722XuvtV5rvdbe77218+is
dxv56/wLG/A6+xsYUg7hfniqptcQsB1a1S1TK2K9R7BJnjsKt490aFPcy9on
Lc301cXtZSYecXCx6v8Vx3Qe4/5rpIYNt+H+GdwC4wlYTh7qfpCpQISlvFzn
Wd8vtM148fBj+6dvPd/qi+Ns/WuXtv3YHuqflrso4PZv+V3CWOc6VBIv13Lg
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
5JY8SoDaIV41pgwTLfM6XDc0TgKxN2Xc0R3l/8QX2tl8Yce30auGORmo5D5X
xVHyIOJx2OeSuqkTSg+M+PhP0pEYdZuU/Lt6FOXyU8Afr082ea/t861MJGYh
/yWuqBoqoIGbfxcRdJo2DYRIMhCfgUNbO+s+jeRa+Q24/5fL0nQrMV/bu2Lk
Vivru6Q1C8p4sLzn1mmkjvVSu/xU3Hmcf+4SUPswyaq3rCKvouP2VyhjT6Nw
+yZnZmAxa78m1MlyCeZlYXW8nj0RRLju3bq2a8c/86C2v/Ggv8e7ZadfGK3v
oaJrVMa2Iy8oKFt2bH0VjQp6lY8mPtjRUNeNGOGtgp3I1eQF8cB5KgQ1p/F/
x+P0lbywNZtV/9GM5liI8+0mJ6eXr7D8y4Oyr/04vuxfGm5SgvPqNBejl6xz
+2cadsu/Y73nFVqbN4Zx/tS3L0s7pRjo7APLtdf2kcC8yUF6SQrOLytTUod9
W9B1NVqmbsAgSKS8Xt2+8b/u0fq7vv7VvI6JzHbcPExF/lOHjnxw7UGr7SZO
EiIoUHV5Mtu95oO+iaM54TnGodcWh7XbvKnA//K73uvuXP2uH49HrbE8RzPg
l+ZVKmxI055a/PWDvq1I9S8+HCdPRLX4a+D2qZ6WhUff5usf84mXYN0DrVXw
UzLfm/pP6/93Hvp3nqi978sHl6aXSLZRLuT8vSE0zW0R0xfbBsN1Vz41kwdg
qKdw4AnmQe8dRvdZPGuFwuy+1lXv+0DuPp1X8nkjaP5amjsV1Qeh83qBy2y9
DLP10javF8hj62UXWy/v5vUCR9l6UWfrpcTgit9sbx8QfX1Ffui3w+tM1dUx
sT3/Z/312fP6+m/Wf1+gg9IhwQE4pMexdFNtO7rBSZa5CUQY+ThQcw2v16FD
Mvk3cb5BDXSvZO2Lac/7C6xg+4sD218M2j9uaoylweGxr+pfZDpg34pdTxs8
qejVvB/BTrYfZbP9iDzvR9DB9iNTth9Ff5bjaFdnwom6Z9xSGJ9X8iutt077
r/NL/+m8TszjD1Sw8ecaG3/uO1ytfBVNA/HR9hIGzjPEVhYeW3qdisKUXgql
72HCzXUPDr4PJcEqn4vHurPL/qWd2NzRMzdUKYIXegpNhCkm0po7+VIO5ynf
T+yXUdBgAFdZtuZlUjegJ8dmyJjX21x1tObcyICBDsvF0UPdoFLIddjZAet3
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
0SZxy4b/ASk7YHk=
      "]], {}}, {{
     {RGBColor[1, 0, 0], PointSize[0.05], 
      StyleBox[
       Point3DBox[{{-0.7071067811865476, -0.408248290463863, \
-0.28867513459481287`}, {0., 0., 0.8660254037844386}, {0., 
        0.816496580927726, -0.28867513459481287`}, {
        0.7071067811865476, -0.408248290463863, -0.28867513459481287`}}],
       AspectRatio -> 1]}, {}, {}}, {}}, {{
     {RGBColor[0, 1, 0], PointSize[0.05], 
      Point3DBox[{{-0.1767766952966369, -0.10206207261596575`, 
       0.14433756729740643`}, {-0.1767766952966369, -0.10206207261596575`, 
       0.14433756729740643`}, {0.1767766952966369, 
       0.10206207261596575`, -0.14433756729740643`}, {0.1767766952966369, 
       0.10206207261596575`, -0.14433756729740643`}}]}, {}, {}}, {}}},
  Axes->True,
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{319.645199482555, 367.3598435890846},
  ImageSizeRaw->Automatic,
  Method->{"RelieveDPZFighting" -> True, "DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.19472534358578775`, 3.1555902426283455`, 1.2059569897778994`},
  
  ViewVertical->{-0.08700481389828668, 0.27302588291778773`, 
   0.9580642095472971}]], "Output",
 CellChangeTimes->{{3.947558775168098*^9, 3.947558801773986*^9}, 
   3.947558867820478*^9, 3.947559245341999*^9, {3.947559348875441*^9, 
   3.947559404785877*^9}, {3.947559458856*^9, 3.947559490798311*^9}, {
   3.9475595363679857`*^9, 3.947559551845656*^9}, 3.947559585407775*^9, {
   3.947559626510844*^9, 3.9475596506748323`*^9}},
 CellLabel->"Out[137]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
DrePzYrYh7jNIaYK+PLHa0aFY5vHhEYFfDUAEWoy+k1LAYo1YtL8BpO7T35p
TpOYK7d5dKW9e2LEndFAunxm43DgJ3v3pIi9hx/7pkTAOrGPzIpYYfvwzIhV
yVZPyHcXjSu2H5wRAeuFPbK8zmZ8/mDufrovx751IMf+zSGYz1z20JJat33m
COcLa0uhfefSihLna2vz3DPLy93H28vdTc1DSOlOGOWtnFzJNkzMZ6s5vlaM
z7dh/rZPiOCaj79BMi80TE3/ZvK2kpk2ybkLqBCkhzdp9DCkPvhUZtfZ0JAN
lGZ3c+rgVumPH5xJM9ozJ9U+Njs1ZD88m0+qu6yh2Nk1PRt+sSUTq9lDS+vs
H+7Jsn+2P8f+5cEc+90Hc+3fHcl1Xt5SBs3bt7pz7J/ty3KeWY1Czb65NdP9
7IpydqWzCAQc2zW3xl08rd7ZNr2QbZ6Sz9ZNQGZwF40tju2bFJkaEOUAhH1L
ILL8eTCtFxJTuchwySTsyRON+MIephEYm0+lMJOHsyXjS5Gh28flu/NGF3uz
RlV4s/kxZ3QFW8uJZv3kfNY1vcA+syDVPj0v1T7Zmuotaqi0H5uXZh+dncra
JkbdZTNG8PnMtX/FifO9w7n2Hx7OtT84lueunDOCPcyFwG+4APi3/Vn2v+zO
Yt0La2FevZPtd9s3tmS6bdPrnQvLi2Fucf4PcxSCbNzFFe+GaWX2gakRkTsc
uOKYEcyTT3brDPOkT2vfWD1SP03muJ4Jo4izgB4FTQJ3IxeunVRo7+WcDXR5
kA8EaJLztn2USzEgwNiUAjB/2Z6mQm/VtCqvY0qVt3xypbt+Winb3VTI1kwo
wPbam0a4K2aP4NyfBxNpf9yT57y+s9xdNWeE/YejfJIf5MTbzYl4L04qR0C9
N2/aaPv7XWh+8InNwIm9uLzYPt3KYeEKZ8+kMNs5vYAtmxgVW1feoaYRa6o0
IzT5rJqSCpoTJXcQAtd68qhaIFYLHQcrxZ05tg75XsxzCMSndQ9bPKHa2Til
0D7Cp/jY7Ih9vDkVPQug1fPcu3gabNTOTPtLqzLdXc1l7MiCIrZrZiFbNxGn
2TvTWettnl+Pyuq5zVH2djfqeD7VZfaHnIZ/dzjH/hWf5n/bh1PtPr26wps/
bTTod7zv89zwWcplhL01g8uJDPtMKwj2sHOoKdudM2F4WyALBqCg4taK4tSv
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
GbJAZjOhdQajVZDJ2R+gthP72jPka883p6vXkPhfl6l+157lXFlT5jaNvcOW
vTdhA4Jx98gOGQfJ6Wzg3TL0tWdr9LVzNY6+UK5ilwtU7Pl8FTuTQwA+ARA2
EQjf2VCGW/38ysqw+oq3dPnn0Rx+ijBLH+RLbGQA1KovyL821qFkmrwtfUfy
s4AtF6kRaH1fa+atmISJ1XRt0Zuodl4tqp3nCShzVtNOkgqItHaXvlCSqXN7
ZpnJaa43I8CB2DLWndAm/YN1JawIPdNSgUSJ+myHRJ2fbslUf9iUqbeiaJso
7YeStsTOejzL+ycreHdmTpi8tzSNI9AD9SXqrUVpGOei6wdVxBYOK3M2jsw4
tHbAN0EzrmQnCE0mvXcmOGmusFi/2EaAGAYSJbRM8l2kUNcw/GYoS3AInPqY
xDOcvty5IIOz/MxcR3PeUTfUVbujB9PiHZkXCmMzoVA2CkD1wlF5ehGO0YbM
Ek4PEOaxW2tjXTUyHNBQoZ2qo3xk6Hl17IAuX1qfBelyMRb/vHHVIJLsMIf1
6Q49x6tyfGRmkTpKJPloC4OSfqaL013qHde/tYBtids4tNjZ3pAjuGzLlCsA
m2F1igAadccOI7baWKxOr8x0Nm9K1wt3d6KocOr6dIq6xq3Pccc1ioBCKMW5
uCW84fWEWaB0Uj6QCvTyEtzUUASnyH6dEAuXy27XeFxAV6LR8flBj5usztBf
49mWdHXlwUx1fVOW83wb+Ykxd9gvrfZVq5gqjz1/pAd9vqbpd0qiSL9w4HbC
aK2+9m/EevfUxk6ul13oTy4n3G4r1de28vLWe+fz+C1HP1lI2D2eE8pUX5OD
/fpYDqyA88MNZeqrYzmAr/PD9TIrkkDMtwRf53ePF7ovP1QJAIfhcUOpl//2
rSzyvyXgyex0iSvzn/zQohob25pCAU8N5hkHnQIItc5TtltfXcGbOBmEBp2r
2GQ8LPuqT7r/LiCUXUP7rG7YWReVqfrtFcX6zbZiDMRDex62WuaJHfgavyQH
+gEdP1/BbRa8ZckTM7o4ry7K5mID/l8eVqnXj85x19cVqU3DoqEJCbzkv4Jn
YjkojvMKUPOC9TkiC43jNgjxplIVp+cMy/PjTfGezvKpRT5iZ3uolXA1hesK
xg7sqvaQ6d9jXvLgA0UowkGnP7mFUrV/froAdSQfKAyIDb+7istLh9zT3Z0w
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
jcuRMd62sRkquQh8ORuEwblgZCmHt4KJ1Q/jWKJbK3EgOtkXu4Um+2yvoOm4
2NZ9gg3NJ/viLJVuY4MUsd3oNwYHygcr06BsHvpdQDYp1uW+o7BHmq2p58pd
Lg9fsjhCPsDfgDU4XbxFQ6jMGxrV6fsVSlBKORC/QyNk5NKHamM8fsl9fiqO
0fEXinufPaJnxN86Hly+Oybk+jsn5srA65ThfZ1uwbRqjH0ENcMeDmaN7hes
mtDTb5yRF6yf3BPnYp1d1j1YM2UAGdW7+sSvHe3lui+BBzAbvIACrbRNDTP7
f39zMxbYYXX6R4RK7hiBZtovHmSbyMnetmQjfD1MJ1pIt6mVJax5GPumnWrU
OhBzo6My7h3joXn+4+Nz/a0CTwtHySHn4vnj01LcF8RRPTo5Jn5Sn4Ha4f39
paPL8LUT4vulmSnumVlp/pGZecH+WRTZu7k6F5r4Bg2zBwpMVbjueaFmHMoi
t+kh3DQ5mwnL2HC/6tOBiWInBiHF0GiiUI2pRtjiEubOGYzW5jhAqDl5YNlA
LxXYOe6bxK0RiR9q+to2jMZEcd4Y7M4zkxFl/vbxXcR3Lozv9jZjAod41XnI
XzamNF47TDW6ik8QCH1G7PYLYsdOTk9xz85Jcy8tSHcvLUwLDs8pjU8f2d8/
trAkaJgulK55PSOuexz6SB7OdtK9O/vyoW8hpHepfIuX5uYzvGC7HrkyK/qu
BSRt7laHDPmP6F9v11T2wjSL9VUoyzHYznO5BMwisHvCXpCIw9xR2Lujk1O8
rRO6wMmUE8RS/ZVjSv0V4nv5mFJv54Qu7rlZAlV1KT/UVvWFUxwBGDp5CLqX
hM4kti94em6pv7G2HLYMweweEifypDD+ns2BjcNta5gzIEyR2KDCw7htU4bj
tkk/ktV5Ytx1hb5vybxvbKjJWsn7chubD8KLwLvKLRCl3cwADvHI2irZpLGy
+Y7uGKEO82dPjolB3RVHlICjxeeM6Omvq6Hg1SviUL5SF3PPzYy5p6fH3JPT
Yu7xqTH3pekp/7ZuJJojn78whQ7wSfHe03W0p8/OLw2emtObPlZsWaPYypfy
8Mze2SestSekbFgsDm0DdVOBQzuDmBxu5y8trK2V7Sy3vJ3kcVqiDdzy3tKO
qv8vggd84ddEMvARnlqr7etoua/qqI/AfndwjHH/XkD9JCW+YVxXf924IiiV
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
OyZzvw05jdkzHYgmz29z2cZlssOdVSCVyzYkfZ5FM3k/vGW1DRntXDafc1tM
3ly2gc+HLHf5Z8uyu8DjPQtpiAl3KDllUstLrQx3U+1SluXtX1mWmmMBsEzB
NhwKJIHay6DGtrlo4yKUKwT//c+WpT5kWerd8FMSQpYd176GWShvLtpQXrJC
OqvntOUr90uG5Qh+YKEc6VMdsl8fVfvX11ivcSvaetXGfxOulxmtk2Y5ezIj
1jgAj4brbVesPEySlYsdYtmMjPCC6vm/4mOyvlhYZHJjc3h8ZFkvkrcDLC5M
VTDXa2BPrhfery6IC7I5q8e0cyXMC6QT3UBhH2NNxksZIQjut7mmWtrcjnAo
m/lmLsvAYYbaT1zMdXqLoZxgblO7mY4N4HIdVfSSAbHOlreH24MfO7+960jg
KCltrsgAUedwlWaazc9D6ipRShlOrbGLtJbYBfyjunBfYz0GgGw9H3WaGaxv
VbieFtiBebPmPhgIsXUtTLyu2k/yiaWwzmdFqFalwvsh2a0z1IKMsDUfXvVG
SCp11QfPL4vq/ETtgNa44b4j4+8JvVYbw+dipY7ZS+CK/J/Oxk0Y+6tVwCsa
6ZtovFlLNYXbuRIu35wDKvtIXJGfpS+73tF6UFC7iig/x0vGW4oE6jYTPpfv
wwChrZJfvw+DcppSrw5LRstrht9r+DnKmE8ulev15fOynUaNo7UE6mQs18Au
t39s6cwYL2jLVbjMtCy3lS6GxvvSjXUZfiytA0jb61plvhnXldXyuhodredL
i70ulYJl8DfZIkaxisR1GUxgcficOtvR8AMUpB9qea33nZah29h8rQYUw+5d
Ol8w5CutMMbPMS9gTowBeQKzw1/tXGyNo50zc7EGEOXGtnhuDIG7HB+TmXkH
8uzktr0058GXpu5aLq25nLuuNngFvcU4GV06tlGN2mqGW66sCQfzZEj6GhBY
Fm6eQhsZtSmlfC35ZVunjQm1sk6Dect1NpeKN8I3J0hFJKi+1pxwqcyXa1pY
ar2jHeCEdjc1zZdqwIm8CeqgvGlZ4Bx8jDIuDAuBOxjpXJwqiGK8Al49r7qV
TmH35Vud5os2DkzMssoW5b9cvq7tsOzXtR2lreXL9zuhHE/g2tZmzny7eD9S
6lTTS4bci7axdgPwC+Ve6dydkxyar0sJRN5yKb/VlmrbWh3ulIIti9pmx+tN
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"d923ec87-e460-4bae-b6e9-5c4c32050133"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["r=3", "Subtitle",
 CellChangeTimes->{{3.947556878265992*^9, 
  3.947556885623267*^9}},ExpressionUUID->"c9de1a16-d402-48be-87cb-\
17e432cab541"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "=", 
  RowBox[{"Eigenvalues", "[", "Pn4", "]"}]}]], "Input",
 CellLabel->
  "In[130]:=",ExpressionUUID->"0f7cba44-f7f6-4d23-8846-3be4a6c61432"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "1", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "2", "]"}]}]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "2", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "3", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "1", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "3", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9475569141069107`*^9, 3.947556975878192*^9, 
  3.947557096746708*^9, 3.9475596412879753`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"9ae2c672-42a1-416a-bce1-4d38362a600c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", " ", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"d", "==", "0"}], ",", " ", 
    RowBox[{"p", "[", "3", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9475569238093777`*^9, 3.9475569478207607`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"b821e0ba-c643-4a0a-ad43-872d75ab59ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "3", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.947556928545988*^9, 3.947556948193718*^9}, {
   3.9475569789217253`*^9, 3.947556986531551*^9}, 3.947557098075211*^9, 
   3.947559642363419*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"f8718996-36e2-4cd5-919f-a6b979957ade"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn4r3a", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Pn4", "/.", 
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"Pn4r3a", "//", " ", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.947556938608767*^9, 3.947556961419031*^9}, {
  3.94755701901398*^9, 3.9475570286258698`*^9}, {3.94755708792988*^9, 
  3.947557105203473*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"587cdac8-3124-45b7-854f-535ac567e5bf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "2", "]"}]}]},
     {
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "2", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "2", "]"}]}], 
      RowBox[{"p", "[", "1", "]"}], 
      RowBox[{"p", "[", "2", "]"}]},
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "2", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      RowBox[{"p", "[", "2", "]"}], 
      RowBox[{"p", "[", "1", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.947556952271782*^9, 3.9475569877153587`*^9}, 
   3.947557029432588*^9, {3.947557090266824*^9, 3.9475571056890306`*^9}, 
   3.9475596434444647`*^9},
 CellLabel->
  "Out[132]//MatrixForm=",ExpressionUUID->"48185de3-7444-43d2-beb2-\
bf671bf4c764"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "Pn4r3a", "]"}]], "Input",
 CellChangeTimes->{{3.947557031842918*^9, 3.9475570329097843`*^9}, 
   3.9475570944451942`*^9},
 CellLabel->
  "In[133]:=",ExpressionUUID->"7a37cac9-b85d-4e9e-bba0-211bd9033c1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"p", "[", "1", "]"}], "-", 
      RowBox[{"p", "[", "2", "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "1", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "2", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.947557033327862*^9, {3.9475570948029346`*^9, 3.9475571028337317`*^9}, 
   3.947559645023231*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"c94c5914-20f9-4bee-b721-38f10d673362"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", " ", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", "[", "1", "]"}], "-", 
       RowBox[{"p", "[", "2", "]"}]}], ")"}]}], "==", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"p", "[", "1", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"p", "[", "2", "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947557040834743*^9, 3.947557067205974*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"270614d6-479b-464e-ad38-d5604594a2b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "2", "]"}], "\[Rule]", 
    FractionBox["1", "4"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.947557048320891*^9, 3.947557067517151*^9}, 
   3.947557114396294*^9, 3.947559646644164*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"5fb1408c-81e6-455d-baab-ba7ed6a2272f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn4r3b", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Pn4r3a", "/.", 
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", " ", 
  RowBox[{"Pn4r3b", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.947557056299652*^9, 3.9475570827659283`*^9}, {
  3.947557118670636*^9, 3.947557127900816*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"8363b865-bcc6-4135-b95a-d754f8e0e355"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"p", "[", "1", "]"}], 
      FractionBox["1", "4"], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      FractionBox["1", "4"]},
     {
      FractionBox["1", "4"], 
      RowBox[{"p", "[", "1", "]"}], 
      FractionBox["1", "4"], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      FractionBox["1", "4"], 
      RowBox[{"p", "[", "1", "]"}], 
      FractionBox["1", "4"]},
     {
      FractionBox["1", "4"], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"p", "[", "1", "]"}]}], 
      FractionBox["1", "4"], 
      RowBox[{"p", "[", "1", "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.947557072472028*^9, 3.947557128305674*^9, 
  3.947559654016993*^9},
 CellLabel->
  "Out[138]//MatrixForm=",ExpressionUUID->"d8a4bc8e-47a6-49d8-b6c3-\
5a50c5675831"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "Pn4r3b", "]"}]], "Input",
 CellChangeTimes->{{3.947557142290682*^9, 3.947557145550085*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"42d1c80a-1501-43db-9559-12577f88b0d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9475571459024887`*^9, 3.9475596557584133`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"94879d85-136a-4c48-993c-9e644c4076e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", " ", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"p", "[", "1", "]"}]}]}], ")"}]}], "==", 
     RowBox[{"1", "/", "\[Alpha]"}]}], ",", " ", 
    RowBox[{"p", "[", "1", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947557150146492*^9, 3.9475571616868563`*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"2def59a1-f7f9-4436-9d0c-385b926e9ea9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"2", "+", "\[Alpha]"}], 
     RowBox[{"4", " ", "\[Alpha]"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9475571595272617`*^9, 3.9475571621423407`*^9}, 
   3.9475596571623507`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"630dc4b2-2cdb-4134-8e8c-a84e5e363bfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn4r3", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Pn4r3b", "/.", 
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", " ", 
  RowBox[{"Pn4r3", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.9475571677093363`*^9, 3.947557184328834*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"2c0690ca-8ff2-4e53-94e6-c015de76f8eb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"2", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox["1", "4"], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox["1", "4"]},
     {
      FractionBox["1", "4"], 
      FractionBox[
       RowBox[{"2", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox["1", "4"], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox["1", "4"], 
      FractionBox[
       RowBox[{"2", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox["1", "4"]},
     {
      FractionBox["1", "4"], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox["1", "4"], 
      FractionBox[
       RowBox[{"2", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.947557184535133*^9, 3.947559658443668*^9},
 CellLabel->
  "Out[141]//MatrixForm=",ExpressionUUID->"0642f4ca-5853-4383-a1d3-\
040e3ee1a3c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"Pn4r3", ">=", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.9475571890552187`*^9, 3.947557193139607*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"4faf28c7-0465-4260-b5b2-a7953258571a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "\[LessEqual]", 
   RowBox[{"-", "2"}]}], "||", 
  RowBox[{"\[Alpha]", "\[GreaterEqual]", "2"}]}]], "Output",
 CellChangeTimes->{3.947557193424946*^9, 3.947559660141992*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"87a28f7f-1c83-4d32-82d1-d7b4c9f14716"]
}, Open  ]],

Cell[CellGroupData[{

Cell["State-space", "Subsection",
 CellChangeTimes->{{3.947557211888452*^9, 
  3.94755721592872*^9}},ExpressionUUID->"b59cf5cd-bed9-4d27-889c-\
c42fd58ce375"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", "-", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", " ", "=", " ", 
   RowBox[{"Unembed", "[", "\[Lambda]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cn4r3", "=", 
   RowBox[{"ConstructC", "[", 
    RowBox[{"n", ",", " ", "\[Alpha]", ",", "Pn4r3", ",", " ", "\[Chi]"}], 
    "]"}]}], ";", " ", 
  RowBox[{"Cn4r3", "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.947557508131053*^9, 3.947557535942519*^9}, {
   3.9475588805432873`*^9, 3.947558884479991*^9}, 3.9475589725061407`*^9},
 CellLabel->
  "In[143]:=",ExpressionUUID->"24feae11-8a80-4ed6-8741-9dedd019321e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "24"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"9", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"x", "[", "1", "]"}]}], "-", 
         RowBox[{"5", " ", 
          SqrtBox["6"], " ", 
          RowBox[{"x", "[", "2", "]"}]}], "+", 
         FractionBox[
          RowBox[{"3", "+", 
           RowBox[{"6", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "+", 
           RowBox[{"6", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}]}], 
          RowBox[{"1", "+", "\[Alpha]"}]], "-", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"6", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "-", 
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "+", 
          RowBox[{"4", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      RowBox[{
       FractionBox["1", "24"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         FractionBox["9", 
          RowBox[{"1", "+", "\[Alpha]"}]], "+", 
         RowBox[{"3", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"x", "[", "1", "]"}]}], "-", 
         RowBox[{
          SqrtBox["6"], " ", 
          RowBox[{"x", "[", "2", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}]},
     {
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"6", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "-", 
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "+", 
          RowBox[{"4", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"6", "+", 
        RowBox[{"3", " ", "\[Alpha]"}], "-", 
        RowBox[{"3", " ", 
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"x", "[", "1", "]"}]}], "-", 
        RowBox[{
         SqrtBox["6"], " ", 
         RowBox[{"x", "[", "2", "]"}]}], "+", 
        RowBox[{
         SqrtBox["6"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "2", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"x", "[", "3", "]"}]}], "+", 
        RowBox[{"10", " ", 
         SqrtBox["3"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "3", "]"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"4", " ", 
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "+", 
          RowBox[{"4", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      RowBox[{
       FractionBox["1", "24"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         FractionBox["9", 
          RowBox[{"1", "+", "\[Alpha]"}]], "-", 
         RowBox[{"3", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"x", "[", "1", "]"}]}], "+", 
         RowBox[{
          SqrtBox["6"], " ", 
          RowBox[{"x", "[", "2", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "24"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         FractionBox["9", 
          RowBox[{"1", "+", "\[Alpha]"}]], "+", 
         RowBox[{"3", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"x", "[", "1", "]"}]}], "-", 
         RowBox[{
          SqrtBox["6"], " ", 
          RowBox[{"x", "[", "2", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"4", " ", 
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "+", 
          RowBox[{"4", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"6", "+", 
        RowBox[{"3", " ", "\[Alpha]"}], "+", 
        RowBox[{"3", " ", 
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"x", "[", "1", "]"}]}], "+", 
        RowBox[{
         SqrtBox["6"], " ", 
         RowBox[{"x", "[", "2", "]"}]}], "+", 
        RowBox[{"7", " ", 
         SqrtBox["6"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "2", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"x", "[", "3", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "3", "]"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"6", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "-", 
          RowBox[{"4", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}], 
      RowBox[{
       FractionBox["1", "24"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         FractionBox["9", 
          RowBox[{"1", "+", "\[Alpha]"}]], "-", 
         RowBox[{"3", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"x", "[", "1", "]"}]}], "+", 
         RowBox[{
          SqrtBox["6"], " ", 
          RowBox[{"x", "[", "2", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
      FractionBox[
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"6", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "-", 
          RowBox[{"4", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"6", "+", 
        RowBox[{"3", " ", "\[Alpha]"}], "+", 
        RowBox[{"3", " ", 
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"x", "[", "1", "]"}]}], "-", 
        RowBox[{
         SqrtBox["6"], " ", 
         RowBox[{"x", "[", "2", "]"}]}], "-", 
        RowBox[{"3", " ", 
         SqrtBox["6"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "2", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"x", "[", "3", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SqrtBox["3"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "3", "]"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.947558973618376*^9, 3.947559664740326*^9},
 CellLabel->
  "Out[145]//MatrixForm=",ExpressionUUID->"2db61452-a995-4128-b3de-\
ad87921eafa4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fixed\[Alpha]", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigs", " ", "=", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"Cn4r3", "/.", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", "->", "Fixed\[Alpha]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Consn4r3", " ", "=", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eigs", ">=", "0"}], ",", " ", 
       RowBox[{"0", " ", "<=", " ", "\[Chi]", " ", "<=", "1"}]}], "}"}], ",", 
     " ", "\[Lambda]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.947557508131053*^9, 3.947557535942519*^9}, {
  3.9475588805432873`*^9, 3.947558884479991*^9}, {3.9475589725061407`*^9, 
  3.947558977701476*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"148c52a3-cb7d-4846-9586-dbd5c673c662"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.947557528945815*^9, 3.9475588883268843`*^9, 
  3.947559044467473*^9, 3.947559886619546*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"636ae1f3-6b46-4a71-9c2e-0c3f54aac20f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimplexVectors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Embed", "[", 
      RowBox[{"UnitVector", "[", 
       RowBox[{"n", ",", "i"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReferenceVectors", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Embed", "[", 
      RowBox[{
       RowBox[{"Pn4r3", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", "->", "Fixed\[Alpha]"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"RegionPlot3D", "[", 
     RowBox[{"Consn4r3", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "1", "]"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "2", "]"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "3", "]"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", " ", 
      RowBox[{"PlotPoints", "->", "25"}], ",", 
      RowBox[{"MaxRecursion", "\[Rule]", "5"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Opacity", "[", "0.5", "]"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{"SimplexVectors", ",", " ", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", 
         RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
         RowBox[{"AspectRatio", "->", "1"}]}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{"ReferenceVectors", ",", " ", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", 
         RowBox[{"PointSize", "[", "0.05", "]"}]}], "}"}]}]}], "]"}]}], "}"}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.947558829641055*^9, 3.947558829659*^9}, {
  3.9475588913467293`*^9, 3.9475588965987167`*^9}, {3.947559020828573*^9, 
  3.947559021066041*^9}, {3.947559674017612*^9, 
  3.947559679072048*^9}},ExpressionUUID->"b2a90dc3-70f1-49ad-8d4f-\
d006edd6c90c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.947557264339961*^9, 
  3.947557265790984*^9}},ExpressionUUID->"52cbfd1a-3557-4ed2-956e-\
7bd0bbe9668f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["r=4", "Subtitle",
 CellChangeTimes->{{3.9475572259303427`*^9, 
  3.9475572270485153`*^9}},ExpressionUUID->"3f2f42e8-7f10-44ca-bc9d-\
53d8c97a66fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "=", 
  RowBox[{"Eigenvalues", "[", "Pn4", "]"}]}]], "Input",
 CellChangeTimes->{{3.947557273598625*^9, 3.947557277279764*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"9c9a2c05-b29d-47fc-b215-cf50046bf79b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "1", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "2", "]"}]}]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "2", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "3", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "1", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"p", "[", "3", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9475572693683767`*^9, 3.94755727759825*^9}, 
   3.9475597038637047`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"dca45908-9f78-45b1-be16-6585a95f13e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"p", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"p", "[", "2", "]"}]}]}], "==", 
      RowBox[{"1", "/", "\[Alpha]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        RowBox[{"p", "[", "2", "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"p", "[", "3", "]"}]}]}], "==", 
      RowBox[{"1", "/", "\[Alpha]"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"p", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"p", "[", "3", "]"}]}]}], "==", 
      RowBox[{"1", "/", "\[Alpha]"}]}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947557299749441*^9, 3.94755733928052*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"50f85f31-9d3a-45a4-9944-a4de96503ecf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", "1", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"3", "+", "\[Alpha]"}], 
      RowBox[{"4", " ", "\[Alpha]"}]]}], ",", 
    RowBox[{
     RowBox[{"p", "[", "2", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
      RowBox[{"4", " ", "\[Alpha]"}]]}], ",", 
    RowBox[{
     RowBox[{"p", "[", "3", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
      RowBox[{"4", " ", "\[Alpha]"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.947557327148395*^9, 3.947557339677511*^9}, 
   3.947559704946019*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"17aef9fb-5730-4980-952c-832a606feec9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pn4r4", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Pn4", "/.", 
     RowBox[{"soln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", " ", 
  RowBox[{"Pn4r4", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.9475573424932423`*^9, 3.9475573605054703`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"36049a56-ef46-4152-a804-555a51736dce"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"3", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"3", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"3", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]], 
      FractionBox[
       RowBox[{"3", "+", "\[Alpha]"}], 
       RowBox[{"4", " ", "\[Alpha]"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.947557360732623*^9, 3.9475590487761097`*^9, 
  3.947559706089281*^9},
 CellLabel->
  "Out[151]//MatrixForm=",ExpressionUUID->"ef388367-f601-4d64-a29f-\
045c819f7c0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"Pn4r4", ">=", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.947557370538878*^9, 3.947557378576754*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"8d1ae061-548f-42a7-82a1-3608dca4a9f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "\[LessEqual]", 
   RowBox[{"-", "3"}]}], "||", 
  RowBox[{"\[Alpha]", "\[GreaterEqual]", "1"}]}]], "Output",
 CellChangeTimes->{3.947557379057103*^9, 3.9475597074163723`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"bc99b2d4-d410-4283-bb56-2706da7aad34"]
}, Open  ]],

Cell[CellGroupData[{

Cell["State-space", "Subsection",
 CellChangeTimes->{{3.947557395064905*^9, 
  3.94755739633216*^9}},ExpressionUUID->"61603efa-1511-4a89-97b5-\
f6ce3f548b1a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", "-", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", " ", "=", " ", 
   RowBox[{"Unembed", "[", "\[Lambda]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cn4r4", "=", 
   RowBox[{"ConstructC", "[", 
    RowBox[{"n", ",", " ", "\[Alpha]", ",", "Pn4r4", ",", " ", "\[Chi]"}], 
    "]"}]}], ";", " ", 
  RowBox[{"Cn4r4", "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.9475575458695107`*^9, 3.9475575522552853`*^9}, {
   3.947559011340477*^9, 3.947559012861623*^9}, 3.947559053873067*^9},
 CellLabel->
  "In[153]:=",ExpressionUUID->"dcf323b6-0af8-4b0f-9f7d-1741559f31d3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "9"}], "-", 
         RowBox[{"3", " ", "\[Alpha]"}], "+", 
         RowBox[{"6", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"x", "[", "1", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["6"], " ", 
          RowBox[{"x", "[", "2", "]"}]}], "+", 
         RowBox[{"6", " ", 
          SqrtBox["6"], " ", "\[Alpha]", " ", 
          RowBox[{"x", "[", "2", "]"}]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", 
          RowBox[{"x", "[", "3", "]"}]}], "+", 
         RowBox[{"6", " ", 
          SqrtBox["3"], " ", "\[Alpha]", " ", 
          RowBox[{"x", "[", "3", "]"}]}]}], 
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "+", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "-", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "+", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"3", "+", "\[Alpha]", "+", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"x", "[", "3", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SqrtBox["3"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "3", "]"}]}]}], 
       RowBox[{"8", "+", 
        RowBox[{"8", " ", "\[Alpha]"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"3", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"x", "[", "1", "]"}]}], "-", 
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"9", "+", 
        RowBox[{"3", " ", "\[Alpha]"}], "+", 
        RowBox[{"4", " ", 
         SqrtBox["6"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"x", "[", "2", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"x", "[", "3", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SqrtBox["3"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "3", "]"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"3", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "-", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", 
            RowBox[{"x", "[", "2", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["3"], " ", 
            RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"3", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"3", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"x", "[", "1", "]"}]}], "+", 
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"x", "[", "2", "]"}]}], "-", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", 
           RowBox[{"x", "[", "3", "]"}]}]}], ")"}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]], 
      FractionBox[
       RowBox[{"9", "+", 
        RowBox[{"3", " ", "\[Alpha]"}], "+", 
        RowBox[{"6", " ", 
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"x", "[", "1", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SqrtBox["6"], " ", 
         RowBox[{"x", "[", "2", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SqrtBox["6"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "2", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", 
         RowBox[{"x", "[", "3", "]"}]}], "-", 
        RowBox[{"6", " ", 
         SqrtBox["3"], " ", "\[Alpha]", " ", 
         RowBox[{"x", "[", "3", "]"}]}]}], 
       RowBox[{"24", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Alpha]"}], ")"}]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.947559055299376*^9, {3.947559699597416*^9, 3.947559709162916*^9}},
 CellLabel->
  "Out[155]//MatrixForm=",ExpressionUUID->"ce6dfddc-99de-400c-81f1-\
34958dadca85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fixed\[Alpha]", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigs", " ", "=", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"Cn4r4", "/.", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", "->", "Fixed\[Alpha]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Consn4r4", " ", "=", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eigs", ">=", "0"}], ",", " ", 
       RowBox[{"0", " ", "<=", " ", "\[Chi]", " ", "<=", "1"}]}], "}"}], ",", 
     " ", "\[Lambda]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9475575458695107`*^9, 3.9475575522552853`*^9}, {
   3.947559011340477*^9, 3.947559012861623*^9}, 3.947559053873067*^9},
 CellLabel->
  "In[159]:=",ExpressionUUID->"55a2f66d-e528-42de-bca7-d80553313302"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.947559091801991*^9, 3.947560056203498*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"af337b6b-c2d7-4eb8-9cda-e1b467e525ac"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimplexVectors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Embed", "[", 
      RowBox[{"UnitVector", "[", 
       RowBox[{"n", ",", "i"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReferenceVectors", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Embed", "[", 
      RowBox[{
       RowBox[{"Pn4r4", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", "->", "Fixed\[Alpha]"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"RegionPlot3D", "[", 
     RowBox[{"Consn4r4", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "1", "]"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "2", "]"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "3", "]"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", " ", 
      RowBox[{"PlotPoints", "->", "25"}], ",", 
      RowBox[{"MaxRecursion", "\[Rule]", "5"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Opacity", "[", "0.5", "]"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{"SimplexVectors", ",", " ", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", 
         RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
         RowBox[{"AspectRatio", "->", "1"}]}], "}"}]}]}], "]"}], ",", " ", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{"ReferenceVectors", ",", " ", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", 
         RowBox[{"PointSize", "[", "0.05", "]"}]}], "}"}]}]}], "]"}]}], "}"}],
   "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.947557399401726*^9, {3.947559028311448*^9, 3.9475590358927402`*^9}, {
   3.94755968669629*^9, 
   3.947559697160844*^9}},ExpressionUUID->"79ce7423-9c9b-45e9-a075-\
ffbe285e5cbd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{344, Automatic}, {Automatic, 7}},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e4b83fde-bd72-43c9-8b9c-a09cb4b755da"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 181, 3, 98, "Title",ExpressionUUID->"5d1288d4-1ad4-4ee0-bafe-87175a64a060"],
Cell[764, 27, 1931, 45, 271, "Text",ExpressionUUID->"6afabc3f-9002-4b2c-8166-832bea29fdc9"],
Cell[CellGroupData[{
Cell[2720, 76, 158, 3, 67, "Section",ExpressionUUID->"15fcbc91-58c2-4bf5-a6e0-8ba1deaa61fe"],
Cell[2881, 81, 4723, 130, 312, "Input",ExpressionUUID->"a4006ede-ec9e-4afe-852a-c7ff62829fde"],
Cell[7607, 213, 2298, 63, 178, "Input",ExpressionUUID->"266346d2-e2c8-441b-b617-74b901cf6f72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9942, 281, 147, 3, 67, "Section",ExpressionUUID->"38276543-c9fe-435a-ac31-8a0c04b31146"],
Cell[10092, 286, 210, 4, 30, "Input",ExpressionUUID->"aae16506-b2e6-4378-bf1f-c30ab1643a96"],
Cell[CellGroupData[{
Cell[10327, 294, 631, 17, 30, "Input",ExpressionUUID->"2a1848a3-55ff-408c-a145-545e4c8fd91a"],
Cell[10961, 313, 853, 26, 62, "Output",ExpressionUUID->"fa95ff76-b362-4eb6-9c3e-c26b4fcfd9a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11851, 344, 215, 3, 30, "Input",ExpressionUUID->"207a5ffd-c78f-4611-a175-0692ecda91ec"],
Cell[12069, 349, 343, 9, 34, "Output",ExpressionUUID->"32ae082e-690f-424e-bab4-9dc191ce363b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12461, 364, 149, 3, 53, "Subtitle",ExpressionUUID->"7c6c045f-5d33-41fb-b0a6-38605e9ad13d"],
Cell[CellGroupData[{
Cell[12635, 371, 427, 11, 30, "Input",ExpressionUUID->"ba8a7ba1-6890-463d-b341-def645f194d8"],
Cell[13065, 384, 373, 8, 49, "Output",ExpressionUUID->"669b1d34-f76b-4e6b-8410-60390084b111"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13475, 397, 465, 10, 30, "Input",ExpressionUUID->"21db82af-b2e0-4b04-86a6-047652929bb0"],
Cell[13943, 409, 842, 25, 76, "Output",ExpressionUUID->"25d4dfff-f06b-4d32-b849-439753b1b04e"]
}, Open  ]],
Cell[14800, 437, 400, 8, 58, "Text",ExpressionUUID->"74803714-92d5-4e22-aa8a-d8d49c920eeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15237, 450, 148, 3, 53, "Subtitle",ExpressionUUID->"6f862bc4-df2c-435a-b4af-1ae6e139dbd6"],
Cell[CellGroupData[{
Cell[15410, 457, 460, 12, 30, "Input",ExpressionUUID->"51d36384-3e5c-4764-a02a-3c09f7870d60"],
Cell[15873, 471, 412, 10, 50, "Output",ExpressionUUID->"6b6501d2-e867-4609-a5ff-903b1d3785f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16322, 486, 414, 9, 30, "Input",ExpressionUUID->"b8f52d6d-981c-44d6-96ec-aec2114b9e7c"],
Cell[16739, 497, 1124, 34, 76, "Output",ExpressionUUID->"66da6ae8-654e-4f81-a194-b5028f30d55d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17900, 536, 232, 4, 30, "Input",ExpressionUUID->"0ecc6d4e-2833-43ba-be4e-381749bbcfd7"],
Cell[18135, 542, 326, 7, 34, "Output",ExpressionUUID->"90a352f4-4b7b-41fd-b815-dfe15c0e255e"]
}, Open  ]],
Cell[18476, 552, 336, 7, 35, "Text",ExpressionUUID->"119358bb-f938-4423-bafc-2f0aa239a329"],
Cell[CellGroupData[{
Cell[18837, 563, 163, 3, 54, "Subsection",ExpressionUUID->"cdc498c9-9d8b-4e15-aa6e-2f0ec0376d5c"],
Cell[19003, 568, 300, 7, 58, "Text",ExpressionUUID->"2bb0397d-76c4-47d8-88b6-3f25f99b9ae0"],
Cell[CellGroupData[{
Cell[19328, 579, 781, 18, 94, "Input",ExpressionUUID->"18baf734-cea5-4003-819e-79e4c0ac4941"],
Cell[20112, 599, 1387, 42, 82, "Output",ExpressionUUID->"5c2c6a3f-0814-43c7-8a1e-5a51584c9f94"]
}, Open  ]],
Cell[21514, 644, 391, 8, 58, "Text",ExpressionUUID->"20663608-63f6-4371-b2e6-1c9e551639cc"],
Cell[CellGroupData[{
Cell[21930, 656, 481, 11, 30, "Input",ExpressionUUID->"eeedb68a-c538-4352-9632-9828f241ca24"],
Cell[22414, 669, 942, 29, 80, "Output",ExpressionUUID->"1a5e1d0b-efda-46c0-a34f-59190d7698ed"]
}, Open  ]],
Cell[23371, 701, 280, 7, 35, "Text",ExpressionUUID->"f16a48e7-16b8-49f6-ac25-fb293f46beee"],
Cell[CellGroupData[{
Cell[23676, 712, 496, 14, 53, "Input",ExpressionUUID->"f2286e5a-696b-4bd7-b44f-1bd9ff6887c4"],
Cell[24175, 728, 314, 8, 34, "Output",ExpressionUUID->"c07ee239-7d87-47ba-8eed-1cbaebd23d20"]
}, Open  ]],
Cell[24504, 739, 321, 7, 58, "Text",ExpressionUUID->"46ad6299-e4a6-456a-b1ec-b9419c552e65"],
Cell[CellGroupData[{
Cell[24850, 750, 1520, 41, 147, "Input",ExpressionUUID->"ce09658e-947f-4b94-9d30-3e97140cd865"],
Cell[26373, 793, 502, 13, 54, "Output",ExpressionUUID->"e9d5b8be-72c3-4b0d-865b-ecb87713346c"]
}, Open  ]],
Cell[26890, 809, 334, 7, 58, "Text",ExpressionUUID->"99d0820f-1cfd-4794-898d-65bb5a4c4fa4"],
Cell[CellGroupData[{
Cell[27249, 820, 2848, 78, 232, "Input",ExpressionUUID->"b11965ca-59bb-4a59-b202-9581327569cd"],
Cell[30100, 900, 2783, 50, 463, "Output",ExpressionUUID->"8ec73a09-8b06-43e8-be61-4740741b2c74"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32932, 956, 152, 3, 67, "Section",ExpressionUUID->"206cdc13-d59d-4e43-a1fe-c6e0437970aa"],
Cell[33087, 961, 211, 4, 30, "Input",ExpressionUUID->"20fc88e8-f637-4e0c-b6a8-9194732ca1e1"],
Cell[CellGroupData[{
Cell[33323, 969, 1183, 31, 73, "Input",ExpressionUUID->"c3549cfa-2456-48a3-8ad8-bb9bcc23b40e"],
Cell[34509, 1002, 1327, 39, 80, "Output",ExpressionUUID->"582bba7c-7398-4d86-86f9-0317f28ad72e"]
}, Open  ]],
Cell[35851, 1044, 181, 3, 35, "Text",ExpressionUUID->"228c7387-8d1b-4201-9fb0-93fefd87117d"],
Cell[CellGroupData[{
Cell[36057, 1051, 457, 12, 30, "Input",ExpressionUUID->"d0045aee-8a55-4965-bad9-6c7deb594cc6"],
Cell[36517, 1065, 489, 12, 49, "Output",ExpressionUUID->"f617feb0-77d3-4c8c-9048-72543d721322"]
}, Open  ]],
Cell[37021, 1080, 184, 3, 35, "Text",ExpressionUUID->"bf2c16f1-62a6-4cf2-b2b9-bae230cc53ab"],
Cell[CellGroupData[{
Cell[37230, 1087, 1405, 38, 94, "Input",ExpressionUUID->"e475a62c-cfcc-46d4-b94c-a88d3fd72160"],
Cell[38638, 1127, 1692, 54, 100, "Output",ExpressionUUID->"07716442-a694-4222-a36f-6b39873e9055"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40367, 1186, 211, 3, 30, "Input",ExpressionUUID->"a7fd6233-4889-4fa5-a72f-98c8b02e3581"],
Cell[40581, 1191, 586, 18, 49, "Output",ExpressionUUID->"e9b32110-4286-42c8-b5c0-3115f8bcc809"]
}, Open  ]],
Cell[41182, 1212, 286, 7, 35, "Text",ExpressionUUID->"e398d420-c351-44e7-8cbc-6baa0c270925"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41517, 1225, 149, 3, 53, "Subtitle",ExpressionUUID->"c4fde748-7428-427c-b709-64d0a3f1d310"],
Cell[CellGroupData[{
Cell[41691, 1232, 483, 13, 47, "Input",ExpressionUUID->"e284abff-b692-4729-8a2d-58c7823db2d6"],
Cell[42177, 1247, 365, 9, 50, "Output",ExpressionUUID->"8e3aa345-8c0e-4124-9aa9-11ffa7612871"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42579, 1261, 404, 9, 30, "Input",ExpressionUUID->"413d7653-e002-4d2c-8b36-082c6674bc91"],
Cell[42986, 1272, 1702, 54, 100, "Output",ExpressionUUID->"8d5a9610-5cf2-4308-aad6-373adaeca65c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44725, 1331, 166, 3, 30, "Input",ExpressionUUID->"aabecb63-88d4-46eb-987a-ebff147dd705"],
Cell[44894, 1336, 298, 6, 34, "Output",ExpressionUUID->"1fd642e0-cb92-4d40-9f6c-8d62d276b7ff"]
}, Open  ]],
Cell[45207, 1345, 217, 4, 35, "Text",ExpressionUUID->"dcdddeeb-0569-4674-8277-612c0c673dee"],
Cell[CellGroupData[{
Cell[45449, 1353, 161, 3, 54, "Subsection",ExpressionUUID->"421aeaae-c95b-4030-8d93-3f645976e65d"],
Cell[CellGroupData[{
Cell[45635, 1360, 762, 18, 94, "Input",ExpressionUUID->"2e8191af-3d4d-4bf2-ab33-591acc2a4d96"],
Cell[46400, 1380, 5312, 167, 122, "Output",ExpressionUUID->"5f78c4ba-1813-417f-a38c-ae8e069a5133"]
}, Open  ]],
Cell[51727, 1550, 289, 7, 35, "Text",ExpressionUUID->"5351c71f-f191-4280-9bf5-09caf37a22e5"],
Cell[CellGroupData[{
Cell[52041, 1561, 961, 23, 73, "Input",ExpressionUUID->"4969efbc-1bc3-44d3-be27-589d13ea6160"],
Cell[53005, 1586, 7164, 194, 177, "Output",ExpressionUUID->"747a5c37-cecf-434d-94d3-d54f772e379d"]
}, Open  ]],
Cell[60184, 1783, 359, 7, 35, "Text",ExpressionUUID->"7018dad4-a0e5-4fb3-a0b0-af6eb0abc1a1"],
Cell[CellGroupData[{
Cell[60568, 1794, 2077, 55, 115, "Input",ExpressionUUID->"2e19eaaa-bbb8-4faa-ad05-e6eb0b360b32"],
Cell[62648, 1851, 4426, 87, 350, "Output",ExpressionUUID->"eb10ac36-174d-4a94-98da-67ea7823806b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67123, 1944, 150, 3, 67, "Section",ExpressionUUID->"43c1552a-55b1-40b6-9c16-3fc2e9ac0936"],
Cell[67276, 1949, 212, 4, 30, "Input",ExpressionUUID->"e8867775-9d9b-4d3f-8126-97eb4406f91b"],
Cell[CellGroupData[{
Cell[67513, 1957, 1871, 49, 94, "Input",ExpressionUUID->"b0094487-9743-473a-af73-f9b0b29366f7"],
Cell[69387, 2008, 1916, 55, 98, "Output",ExpressionUUID->"6d59c3f3-b994-496b-af2d-7389c9d4648a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71340, 2068, 457, 12, 30, "Input",ExpressionUUID->"7c7c1b74-296c-458a-97d2-9e6408ff3369"],
Cell[71800, 2082, 442, 11, 34, "Output",ExpressionUUID->"cc71d38e-3afc-4d6d-898e-98dc72f2cc05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72279, 2098, 2148, 57, 115, "Input",ExpressionUUID->"5851fc29-e99a-4ee3-b8bd-4f4e3e17d720"],
Cell[74430, 2157, 1683, 49, 98, "Output",ExpressionUUID->"5705cd8b-2245-4002-adac-c2293ff0100a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76174, 2213, 149, 3, 53, "Subtitle",ExpressionUUID->"f8812245-0870-405d-b2d9-cc71b7af976b"],
Cell[CellGroupData[{
Cell[76348, 2220, 301, 6, 30, "Input",ExpressionUUID->"1d7e2d85-8cba-425a-949d-71aa643ab96d"],
Cell[76652, 2228, 692, 21, 34, "Output",ExpressionUUID->"e532b435-538a-4df1-b0aa-8dc4e181e580"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77381, 2254, 369, 9, 30, "Input",ExpressionUUID->"3b389875-2733-443d-95b0-42fef8c40748"],
Cell[77753, 2265, 448, 12, 49, "Output",ExpressionUUID->"884d4fc0-111f-4d9e-b6a3-4c6608872847"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78238, 2282, 699, 18, 30, "Input",ExpressionUUID->"47376da6-aa81-44af-a46d-f15bdbc91d0d"],
Cell[78940, 2302, 1740, 54, 126, "Output",ExpressionUUID->"3070ab4c-cc6f-4bd7-80f9-114f5bbd828c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80717, 2361, 242, 4, 30, "Input",ExpressionUUID->"ea3424d1-564a-4712-a6ec-59cb3f25e531"],
Cell[80962, 2367, 392, 9, 34, "Output",ExpressionUUID->"3b3bfec5-b146-46ea-8cc9-f9d5a2bbd5f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81391, 2381, 451, 11, 30, "Input",ExpressionUUID->"4f461acd-ff4e-41b8-9f5d-3166ea15c16b"],
Cell[81845, 2394, 421, 11, 50, "Output",ExpressionUUID->"68a4aafe-e61e-4328-b2a0-8d13facb3b84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82303, 2410, 407, 9, 30, "Input",ExpressionUUID->"751280d9-55af-4197-9689-06d1b3d98124"],
Cell[82713, 2421, 2456, 78, 126, "Output",ExpressionUUID->"3e28d710-b39e-4116-8fc2-bb91dd6f1ead"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85206, 2504, 232, 4, 30, "Input",ExpressionUUID->"43fbbcf3-fec9-4d7e-884d-eb1a85e213e4"],
Cell[85441, 2510, 299, 6, 34, "Output",ExpressionUUID->"7f5d62bf-492c-4dc4-b5c0-f2be58589765"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85777, 2521, 162, 3, 45, "Subsubsection",ExpressionUUID->"a885037e-4d3b-45e8-bb5a-c4fa917975ee"],
Cell[CellGroupData[{
Cell[85964, 2528, 926, 20, 94, "Input",ExpressionUUID->"99e4ff6c-1df9-4486-9ac2-96dd8d8cd83d"],
Cell[86893, 2550, 6854, 208, 154, "Output",ExpressionUUID->"27e61098-db30-4e0f-883f-c44d2dd8fde0"]
}, Open  ]],
Cell[93762, 2761, 1136, 26, 73, "Input",ExpressionUUID->"b404dd36-d1d4-4633-9157-f0fe55227bea"],
Cell[CellGroupData[{
Cell[94923, 2791, 211, 4, 30, "Input",ExpressionUUID->"c31bc390-ae59-4d20-81d8-13903fda088a"],
Cell[95137, 2797, 3027, 83, 118, "Output",ExpressionUUID->"77d20fb0-dd63-47ff-aed3-11324dd2aedc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98201, 2885, 243, 5, 30, "Input",ExpressionUUID->"87c25f5c-f327-4cd3-b29e-225bf6ed5ecf"],
Cell[98447, 2892, 326, 5, 34, "Output",ExpressionUUID->"17bc90e8-667c-4f19-9f4c-864d8d70ef6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98810, 2902, 2877, 70, 157, "Input",ExpressionUUID->"c19d845e-f1c0-4f40-9e0c-6a7dc8bf203d"],
Cell[101690, 2974, 264564, 4360, 384, 156649, 2591, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d923ec87-e460-4bae-b6e9-5c4c32050133"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[366315, 7341, 149, 3, 53, "Subtitle",ExpressionUUID->"c9de1a16-d402-48be-87cb-17e432cab541"],
Cell[CellGroupData[{
Cell[366489, 7348, 239, 6, 30, "Input",ExpressionUUID->"0f7cba44-f7f6-4d23-8846-3be4a6c61432"],
Cell[366731, 7356, 769, 23, 34, "Output",ExpressionUUID->"9ae2c672-42a1-416a-bce1-4d38362a600c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367537, 7384, 327, 8, 30, "Input",ExpressionUUID->"b821e0ba-c643-4a0a-ad43-872d75ab59ea"],
Cell[367867, 7394, 546, 15, 49, "Output",ExpressionUUID->"f8718996-36e2-4cd5-919f-a6b979957ade"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368450, 7414, 496, 12, 30, "Input",ExpressionUUID->"587cdac8-3124-45b7-854f-535ac567e5bf"],
Cell[368949, 7428, 1767, 55, 126, "Output",ExpressionUUID->"48185de3-7444-43d2-beb2-bf671bf4c764"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370753, 7488, 248, 5, 30, "Input",ExpressionUUID->"7a37cac9-b85d-4e9e-bba0-211bd9033c1c"],
Cell[371004, 7495, 602, 18, 34, "Output",ExpressionUUID->"c94c5914-20f9-4bee-b721-38f10d673362"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371643, 7518, 579, 17, 30, "Input",ExpressionUUID->"270614d6-479b-464e-ad38-d5604594a2b9"],
Cell[372225, 7537, 353, 9, 49, "Output",ExpressionUUID->"5fb1408c-81e6-455d-baab-ba7ed6a2272f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372615, 7551, 462, 11, 30, "Input",ExpressionUUID->"8363b865-bcc6-4135-b95a-d754f8e0e355"],
Cell[373080, 7564, 1414, 46, 126, "Output",ExpressionUUID->"d8a4bc8e-47a6-49d8-b6c3-5a50c5675831"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374531, 7615, 218, 4, 30, "Input",ExpressionUUID->"42d1c80a-1501-43db-9559-12577f88b0d0"],
Cell[374752, 7621, 604, 19, 49, "Output",ExpressionUUID->"94879d85-136a-4c48-993c-9e644c4076e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375393, 7645, 552, 16, 47, "Input",ExpressionUUID->"2def59a1-f7f9-4436-9d0c-385b926e9ea9"],
Cell[375948, 7663, 403, 11, 50, "Output",ExpressionUUID->"630dc4b2-2cdb-4134-8e8c-a84e5e363bfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376388, 7679, 401, 10, 30, "Input",ExpressionUUID->"2c0690ca-8ff2-4e53-94e6-c015de76f8eb"],
Cell[376792, 7691, 1773, 57, 126, "Output",ExpressionUUID->"0642f4ca-5853-4383-a1d3-040e3ee1a3c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378602, 7753, 238, 5, 30, "Input",ExpressionUUID->"4faf28c7-0465-4260-b5b2-a7953258571a"],
Cell[378843, 7760, 302, 7, 34, "Output",ExpressionUUID->"87a28f7f-1c83-4d32-82d1-d7b4c9f14716"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379182, 7772, 158, 3, 54, "Subsection",ExpressionUUID->"b59cf5cd-bed9-4d27-889c-c42fd58ce375"],
Cell[CellGroupData[{
Cell[379365, 7779, 787, 19, 94, "Input",ExpressionUUID->"24feae11-8a80-4ed6-8741-9dedd019321e"],
Cell[380155, 7800, 9813, 295, 154, "Output",ExpressionUUID->"2db61452-a995-4128-b3de-ad87921eafa4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390005, 8100, 871, 23, 73, "Input",ExpressionUUID->"148c52a3-cb7d-4846-9586-dbd5c673c662"],
Cell[390879, 8125, 231, 4, 34, "Output",ExpressionUUID->"636ae1f3-6b46-4a71-9c2e-0c3f54aac20f"]
}, Open  ]],
Cell[391125, 8132, 2477, 65, 157, InheritFromParent,ExpressionUUID->"b2a90dc3-70f1-49ad-8d4f-d006edd6c90c"],
Cell[393605, 8199, 152, 3, 30, "Input",ExpressionUUID->"52cbfd1a-3557-4ed2-956e-7bd0bbe9668f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[393806, 8208, 153, 3, 53, "Subtitle",ExpressionUUID->"3f2f42e8-7f10-44ca-bc9d-53d8c97a66fb"],
Cell[CellGroupData[{
Cell[393984, 8215, 305, 7, 30, "Input",ExpressionUUID->"9c9a2c05-b29d-47fc-b215-cf50046bf79b"],
Cell[394292, 8224, 749, 23, 34, "Output",ExpressionUUID->"dca45908-9f78-45b1-be16-6585a95f13e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395078, 8252, 1013, 30, 30, "Input",ExpressionUUID->"50f85f31-9d3a-45a4-9944-a4de96503ecf"],
Cell[396094, 8284, 790, 24, 50, "Output",ExpressionUUID->"17aef9fb-5730-4980-952c-832a606feec9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396921, 8313, 410, 10, 30, "Input",ExpressionUUID->"36049a56-ef46-4152-a804-555a51736dce"],
Cell[397334, 8325, 2552, 82, 126, "Output",ExpressionUUID->"ef388367-f601-4d64-a29f-045c819f7c0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399923, 8412, 236, 5, 30, "Input",ExpressionUUID->"8d1ae061-548f-42a7-82a1-3608dca4a9f4"],
Cell[400162, 8419, 304, 7, 34, "Output",ExpressionUUID->"bc99b2d4-d410-4283-bb56-2706da7aad34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400503, 8431, 158, 3, 54, "Subsection",ExpressionUUID->"61603efa-1511-4a89-97b5-f6ce3f548b1a"],
Cell[CellGroupData[{
Cell[400686, 8438, 787, 19, 94, "Input",ExpressionUUID->"dcf323b6-0af8-4b0f-9f7d-1741559f31d3"],
Cell[401476, 8459, 10746, 328, 154, "Output",ExpressionUUID->"ce6dfddc-99de-400c-81f1-34958dadca85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412259, 8792, 845, 22, 73, "Input",ExpressionUUID->"55a2f66d-e528-42de-bca7-d80553313302"],
Cell[413107, 8816, 182, 3, 34, "Output",ExpressionUUID->"af337b6b-c2d7-4eb8-9cda-e1b467e525ac"]
}, Open  ]],
Cell[413304, 8822, 2432, 65, 178, "Input",ExpressionUUID->"79ce7423-9c9b-45e9-a075-ffbe285e5cbd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

